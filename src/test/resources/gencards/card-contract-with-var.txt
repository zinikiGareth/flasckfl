class Card
  super: org.flasck.jvm.cards.FlasckCard
  inhfield final PUBLIC org.flasck.jvm.cards.Wrapper _wrapper
  inhfield final PUBLIC org.flasck.jvm.display.DisplayEngine _display
  field PROTECTED Card$_C0 ce
  innerClz PUBLICSTATIC Card _C0
  <init>() -> void
    {nextLocal 1}
    org.flasck.jvm.cards.CardDespatcher despatcher = argument
    {nextLocal 2}
    org.flasck.jvm.display.DisplayEngine display = argument
    @A = super{org.flasck.jvm.cards.FlasckCard}.<init>[org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display] -> void
    {flush @A}
    {nextLocal 3}
    Card this = myThis
    @B = makeNew Card$_C0 [Card this]
    @C = getfield this.ce
    @D = assign @C <- @B
    {flush @D}
    {nextLocal 4}
    Card this = myThis
    @E = sconst 'CtrDecl'
    @F = as org.flasck.jvm.cards.ContractImpl(@C)
    @G = callVirtual Card this.registerContract [@E, @F] -> void
    {flush @G}
    @H = super{org.flasck.jvm.cards.FlasckCard}.ready[] -> void
    {flush @H}
    @I = returnVoid
    {flush @I}
  init() -> java.lang.Object
    {nextLocal 1}
    org.ziniki.ziwsh.json.FLEvalContext cx = argument
    @A = arrayOf java.lang.Object[]
    @B = callStatic org.flasck.jvm.builtin.Nil.eval [org.ziniki.ziwsh.json.FLEvalContext cx, @A] -> java.lang.Object
    @C = returnObject @B
    {flush @C}
