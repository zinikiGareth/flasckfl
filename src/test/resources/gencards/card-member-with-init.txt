class Card
  super: org.flasck.jvm.cards.FlasckCard
  inhfield final PUBLIC org.flasck.jvm.cards.Wrapper _wrapper
  inhfield final PUBLIC org.flasck.jvm.display.DisplayEngine _display
  <init>() -> void
    {nextLocal 1}
    org.flasck.jvm.cards.CardDespatcher despatcher = argument
    {nextLocal 2}
    org.flasck.jvm.display.DisplayEngine display = argument
    @A = super{org.flasck.jvm.cards.FlasckCard}.<init>[org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display] -> void
    {flush @A}
    @B = super{org.flasck.jvm.cards.FlasckCard}.ready[] -> void
    {flush @B}
    @C = returnVoid
    {flush @C}
  init() -> java.lang.Object
    {nextLocal 1}
    org.ziniki.ziwsh.json.FLEvalContext cx = argument
    @A = arrayOf java.lang.Object[]
    @B = callStatic org.flasck.jvm.builtin.Nil.eval [org.ziniki.ziwsh.json.FLEvalContext cx, @A] -> java.lang.Object
    {nextLocal 2}
    java.lang.Object v0 = avar java.lang.Object v0
    {nextLocal 3}
    Card this = myThis
    @C = sconst 'f1'
    {nextLocal 4}
    Card this = myThis
    @D = as java.lang.Object(Card this)
    @E = cconst Card$inits_f1.class
    @F = as java.lang.Object(@E)
    @G = arrayOf java.lang.Object[]
    @H = callStatic org.flasck.jvm.fl.FLClosure.obj [@D, @F, @G] -> org.flasck.jvm.fl.FLClosure
    @I = cconst org.flasck.jvm.builtin.Assign.class
    @J = as java.lang.Object(@I)
    @K = arrayOf java.lang.Object[Card this, @C, @H]
    @L = callStatic org.flasck.jvm.fl.FLClosure.simple [@J, @K] -> org.flasck.jvm.fl.FLClosure
    @M = assign java.lang.Object v0 <- @L
    {flush @M}
    @N = cconst org.flasck.jvm.builtin.Cons.class
    @O = as java.lang.Object(@N)
    @P = arrayOf java.lang.Object[java.lang.Object v0, @B]
    @Q = callStatic org.flasck.jvm.fl.FLClosure.simple [@O, @P] -> org.flasck.jvm.fl.FLClosure
    @R = returnObject @Q
    {flush @R}
