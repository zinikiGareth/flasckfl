	card MyQueues
		
		state
			Croset queues <- Croset []
			Croset items <- Croset []
			String selectedQueue
			
		template
			. : 'section' 'main'
				. : 'w-row'
					. : 'w-col' 'w-col-3'
						+ queues q : 'w-list-unstyled' 'queue-list'
							. : 'queue-item' (styleIf 'selected-queue-item' (selectedQueue == q.id))
								(q.title)
								click => selectQueue q.id
					. : 'w-col' 'w-col-9'
						+ items i : 'w-list-unstyled'
							. : 'queue-list-item'
								(i.id) ". " (i.desc)

		implements org.ziniki.Init
			onready
. I still think I would prefer this ...
.				<- query.scan 'myqueues' (type Queue) QueueHandler
				<- query.scan 'query/com.helpfulsidekick.omt.personal.chaddy.1/personal/myqueues' 'com.helpfulsidekick.chaddy.Queue' QueueHandler
						
		handler org.ziniki.QueryHandler QueueHandler
			entry (String key) (Queue value)
				<- queues.insert key value

		handler org.ziniki.QueryHandler TaskHandler
			entry (String key) (Task value)
				<- items.insert key value

		event selectQueue name
			selectedQueue <- name
			items <- (Croset [])
#			TODO: should cancel previous scan.  Suggests also that this should return a handle we can store so we can cancel it			
			<- query.scan ('query/com.helpfulsidekick.omt.personal.chaddy.1/personal/queue/' ++ name) 'com.helpfulsidekick.chaddy.Task' TaskHandler 
			
It still feels like a different keyword would give more of the impression of what's going on here
And there's a sense in which the syntactic difference is varname or no varname
But the reality is the implementation is SO similar		
		implements org.ziniki.Query query
		
		
This is the thing I think we should promote to the top level for Flasck

		styleIf style true = style
		styleIf style x = ''