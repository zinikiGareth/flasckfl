	card MyQueues
		
		state
			Croset[Queue] queues <- Croset []
			Croset[Task] items <- Croset []
			String selectedQueue
			String selectedItem
			
		template
			. : 'section' 'main'
				. : 'w-row'
					. : 'w-col' 'w-col-3'
						+ queues q : 'w-list-unstyled' 'queue-list'
							. : 'queue-item' (styleIf 'selected-queue-item' (selectedQueue == q.id))
								(q.title)
								click => selectQueue q.id
					. : 'w-col' 'w-col-9'
						+ items i : 'w-list-unstyled'
							. : 'queue-list-item' (styleIf 'selected-queue-list-item' (selectedItem == i.id))
								(i.id) ". " (i.title)
								click => selectItem i.id
								dblclick => openItem i.id

		implements org.ziniki.Init
			onready
. I still think I would prefer this ...
.				<- query.scan 'myqueues' (type Queue) QueueScanHandler
				<- query.scan 'query/com.helpfulsidekick.omt.personal.chaddy.1/personal/myqueues' 'com.helpfulsidekick.chaddy.Queue' QueueScanHandler

		implements org.ziniki.KeyValue kv

		handler org.ziniki.QueryHandler QueueScanHandler
			keys (Crokeys crokeys)
				<- queues.mergeAppend crokeys
				<- map requestQueue crokeys.keys

		handler org.ziniki.QueryHandler TaskScanHandler
			keys (Crokeys crokeys)
				<- items.mergeAppend crokeys
				<- map requestTask crokeys.keys

		requestQueue (org.ziniki.Crokey ck) = Send kv 'typed' ['com.helpfulsidekick.chaddy.Queue', ck.id, QueueHandler]
		requestTask (org.ziniki.Crokey ck) = Send kv 'typed' ['com.helpfulsidekick.chaddy.Task', ck.id, TaskHandler]

		handler org.ziniki.KVUpdate QueueHandler
			update obj
				<- queues.put obj

		handler org.ziniki.KVUpdate TaskHandler
			update obj
				<- items.put obj

		event selectQueue (String name)
			selectedQueue <- name
			<- items.clear
#			TODO: should cancel previous scan.  Suggests also that this should return a handle we can store so we can cancel it
#			Store handle using right arrow, e.g. -> queueQuery
#			cancel using <- queueQuery.cancel
#			need to deal with "null" handles ... just ignore operations on null objects?	
			<- query.scan ('arena/com.helpfulsidekick.omt.personal.chaddy.1/personal/queue/' ++ name) 'com.helpfulsidekick.chaddy.Task' TaskScanHandler 

		event selectItem (String name)
			selectedItem <- name

		event openItem (String name)
			<- CreateCard ShowTask name (Assoc 'where' 'overlay' NilMap) Nil
			
It still feels like a different keyword would give more of the impression of what's going on here
And there's a sense in which the syntactic difference is varname or no varname
But the reality is the implementation is SO similar		
		implements org.ziniki.Query query
		
		
This is the thing I think we should promote to the top level for Flasck

		styleIf style true = style
		styleIf style x = ''