class PACKAGEFUNCTIONS$f.java {
  static java.lang.Object eval([java.lang.Object args) {
    return test.golden.PACKAGEFUNCTIONS.f(args[0])
  }
}
class PACKAGEFUNCTIONS.java {
  static java.lang.Object f(java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.Any) {
        {
          v1 = new org.flasck.jvm.fl.FLClosure(_0,new java.lang.Object[0] {})
          return new org.flasck.jvm.fl.FLClosure(org.flasck.jvm.fl.FLEval$Field.class,new java.lang.Object[2] {
              autobox[v1]
              autobox["r"]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("f: case not handled")
    }
  }
}
class Role.java extends org.flasck.jvm.fl.FLASObject {
  Ljava/lang/Object; r

  void <init>() {
    super.<init>()
    return
  }
  static test.golden.Role eval([java.lang.Object args) {
    ret = new test.golden.Role()
    ret.r = args[0]
    return ret
  }
  void _doFullEval() {
    this.r = this._fullOf(this.r)
    return
  }
}
