
// a standalone method can do a few things but not much
	method adebug
		<- Debug "hello"
		
// a standalone method is just a function, so it can be assigned to another function
	fdebug = adebug

// it can take an argument
	method ndebug msg
		<- Debug msg
	
// and as far as I can see it can be embedded in another function

	f msg = showdebug
		method showdebug
			<- Debug msg
			
// we need something with complex arguments too ...
	method k True (Cons {head: h, tail: t})
		<- Debug h

	contract Sample
		up f (String msg)
		
// we can send to an argument, so this works and should typecheck in some way
.	method (Sample svc)
.		<- Send svc "f" ["hello"]

.	method (Sample svc)
.		<- svc.f "hello"

// standalone methods can't reference members because they have no state
// standalone methods can't have assignment cases because they have no state