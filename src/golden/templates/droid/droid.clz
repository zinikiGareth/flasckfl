class Id.java extends org.flasck.jvm.FLASObject {
  Ljava/lang/Object; id

  void <init>() {
    super.<init>()
    return
  }
  static test.golden.Id eval([java.lang.Object args) {
    ret = new test.golden.Id()
    ret.id = args[0]
    return ret
  }
  void _doFullEval() {
    this.id = this._fullOf(this.id)
    return
  }
}
class Item.java extends org.flasck.jvm.FLASObject {
  Ljava/lang/Object; id
  Ljava/lang/Object; title
  Ljava/lang/Object; format

  void <init>() {
    super.<init>()
    return
  }
  static test.golden.Item eval([java.lang.Object args) {
    ret = new test.golden.Item()
    ret.id = args[0]
    ret.title = args[1]
    ret.format = args[2]
    return ret
  }
  void _doFullEval() {
    this.id = this._fullOf(this.id)
    this.title = this._fullOf(this.title)
    this.format = this._fullOf(this.format)
    return
  }
}
class Templates$B1.java extends org.flasck.jvm.areas.DivArea {
  Ltest/golden/Templates; _card

  void <init>(test.golden.Templates cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    b2 = new test.golden.Templates$B2(cardArg,this)
    return
  }
}
class Templates$B2.java extends org.flasck.jvm.areas.ListArea {
  Ltest/golden/Templates; _card

  void <init>(test.golden.Templates cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "data", this, "_assignToVar")
    return
  }
  org.flasck.jvm.areas.Area _newChild(org.flasck.jvm.builtin.Crokey crokey) {
    ret = new test.golden.Templates$B3(this._card,this)
    ret.bindVar("_crokey", crokey.id)
    return ret
  }
  java.lang.Object lvs_0() {
    return this._card.data
  }
}
class Templates$B3.java extends org.flasck.jvm.areas.DivArea {
  Ltest/golden/Templates; _card
  Ltest/golden/Templates$B3; _src_e
  Ljava/lang/Object; e

  void <init>(test.golden.Templates cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, "li")
    this._card = cardArg
    this._src_e = this
    b4 = new test.golden.Templates$B4(cardArg,this)
    b5 = new test.golden.Templates$B5(cardArg,this)
    return
  }
  java.lang.Object _assignToVar(java.lang.Object obj) {
    if (this.e==obj) {
      return null
    }
    this._wrapper.removeOnCrosetReplace(((org.flasck.jvm.areas.ListArea)this._parent)._current, this, this.e)
    this.e = obj
    this._wrapper.onCrosetReplace(((org.flasck.jvm.areas.ListArea)this._parent)._current, this, this.e)
    this._fireInterests()
    return null
  }
}
class Templates$B4.java extends org.flasck.jvm.areas.TextArea {
  Ltest/golden/Templates; _card
  Ltest/golden/Templates$B3; _src_e

  void <init>(test.golden.Templates cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._src_e = ((test.golden.Templates$B3)parent)._src_e
    this._src_e._interested(this, "_contentExpr")
    this._card._wrapper.onAssign(this._src_e.e, "title", this, "_contentExpr")
    (void)this._contentExpr()
    this._src_e._interested(this, "_setVariableFormats")
    this._card._wrapper.onAssign(this._src_e.e, "format", this, "_setVariableFormats")
    (void)this._setVariableFormats()
    return
  }
  java.lang.Object _contentExpr() {
    super._assignToText(this.contents_1())
    return null
  }
  java.lang.Object _setVariableFormats() {
    super._setCSSObj(this.formats_2())
    return null
  }
  java.lang.Object contents_1() {
    return new org.flasck.jvm.FLClosure(org.flasck.jvm.FLEval$Field.class,new java.lang.Object[2] {
        autobox[this._src_e.e]
        autobox["title"]
      })
  }
  java.lang.Object formats_2() {
    {
      v0 = new org.flasck.jvm.FLClosure(org.flasck.jvm.FLEval$Field.class,new java.lang.Object[2] {
          autobox[this._src_e.e]
          autobox["format"]
        })
      return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
          autobox[v0]
          autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
        })
    }
  }
}
class Templates$B5.java extends org.flasck.jvm.areas.TextArea {
  Ltest/golden/Templates; _card
  Ltest/golden/Templates$B3; _src_e

  void <init>(test.golden.Templates cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._src_e = ((test.golden.Templates$B3)parent)._src_e
    return
  }
  java.lang.Object _contentExpr() {
    super._assignToText(this.contents_3())
    return null
  }
  java.lang.Object contents_3() {
    {
      v0 = new org.flasck.jvm.FLClosure(org.flasck.jvm.FLEval$Field.class,new java.lang.Object[2] {
          autobox[this._src_e.e]
          autobox["id"]
        })
      return new org.flasck.jvm.FLClosure(org.flasck.jvm.FLEval$Field.class,new java.lang.Object[2] {
          autobox[v0]
          autobox["id"]
        })
    }
  }
}
class Templates.java extends org.flasck.jvm.cards.FlasckCard {
  Ljava/lang/Object; data

  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    super.ready()
    return
  }
  void render(java.lang.String into) {
    (void)new test.golden.Templates$B1(this,new org.flasck.jvm.areas.CardArea(this._wrapper,this._display,into))
    return
  }
}
