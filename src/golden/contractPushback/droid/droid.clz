class DoIt$Down.java implements org.ziniki.ziwsh.DownContract {
}
class DoIt$Impl.java extends org.flasck.jvm.cards.ContractImpl implements test.golden.DoIt$Down {
  void <init>(org.ziniki.ziwsh.postbox.IDespatcher despatcher) {
    super.<init>(despatcher)
    return
  }
}
class DoIt$Up.java implements org.ziniki.ziwsh.UpContract {
  abstract java.lang.Object calc(java.lang.Object from, org.flasck.jvm.builtin.FLNumber n);
}
class PACKAGEFUNCTIONS$f.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, [java.lang.Object args) {
    return test.golden.PACKAGEFUNCTIONS.f(cxt, args[0], args[1])
  }
}
class PACKAGEFUNCTIONS.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object f(java.lang.Object _context, java.lang.Object _0, java.lang.Object _1) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof test.golden.DoIt) {
        {
          v5 = org.flasck.jvm.fl.FLClosure.simple(test.golden.f_0$m.class, new java.lang.Object[2] {
              autobox[_0]
              autobox[_1]
            })
          v6 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
              autobox[v5]
              autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.MessageWrapper.class, new java.lang.Object[2] {
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(0)]
              autobox[v6]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("f: case not handled")
    }
  }
}
class PACKAGEFUNCTIONS$m.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, [java.lang.Object args) {
    return test.golden.f_0.PACKAGEFUNCTIONS.m(cxt, args[0], args[1])
  }
}
class PACKAGEFUNCTIONS.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object m(java.lang.Object _context, java.lang.Object _s0, java.lang.Object _s1) {
    {
      v0 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[_s1]
          autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
        })
      v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Send.class, new java.lang.Object[3] {
          autobox[_s0]
          autobox["calc"]
          autobox[v0]
        })
      return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v1]
          autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
        })
    }
  }
}
