handler test.golden.f_0.ItemHandler *function*
  lambda test.golden.f_0.ItemHandler set
  lambda test.golden.f_0.ItemHandler ck
  method test.golden.f_0.ItemHandler.update
    case test.golden.f_0.ItemHandler.update
      var test.golden.f_0.ItemHandler.update.obj
    =
      <-
        @
          @
            PackageVar.FLEval.field
            HandlerLambda.HL[test.golden.f_0.ItemHandler.set]
            "insert"
          HandlerLambda.HL[test.golden.f_0.ItemHandler.ck]
          LocalVar.test.golden.f_0.ItemHandler.update.obj
function test.golden.f 0
  nested test.golden.f_0.set test.golden.f
  case test.golden.f_0
  =
    VarNestedFromOuterFunctionScope.Scoped[test.golden.f_0.set]
function test.golden.f_0.set 0
  case test.golden.f_0.set_0
  =
    @
      PackageVar.Croset
      PackageVar.Nil
