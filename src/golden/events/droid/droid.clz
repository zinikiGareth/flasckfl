class Events$B1.java extends org.flasck.jvm.areas.DivArea {
  Ltest/golden/Events; _card

  void <init>(java.lang.Object cxt, test.golden.Events cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    b2 = new test.golden.Events$B2(cxt,cardArg,this)
    b3 = new test.golden.Events$B3(cxt,cardArg,this)
    return
  }
}
class Events$B2.java extends org.flasck.jvm.areas.TextArea {
  Ltest/golden/Events; _card

  void <init>(java.lang.Object cxt, test.golden.Events cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._setText("OK")
    this.setCSS("button")
    (void)this._add_handlers(cxt)
    return
  }
  java.lang.Object _add_handlers(java.lang.Object cxt) {
    super.addEventHandler(false, "click", test.golden.Events$handlers_0.class)
    return null
  }
}
class Events$B3.java extends org.flasck.jvm.areas.TextArea {
  Ltest/golden/Events; _card

  void <init>(java.lang.Object cxt, test.golden.Events cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._setText("Set13")
    this.setCSS("button")
    (void)this._add_handlers(cxt)
    return
  }
  java.lang.Object _add_handlers(java.lang.Object cxt) {
    super.addEventHandler(false, "click", test.golden.Events$handlers_1.class)
    return null
  }
}
class Events$handlers_0.java implements org.flasck.jvm.display.EventHandler {
  Ltest/golden/Events; _card

  void <init>(java.lang.Object cxt, java.lang.Object card) {
    super.<init>()
    this._card = ((test.golden.Events)card)
    return
  }
  java.lang.Object handle(java.lang.Object cxt, java.lang.Object ev) {
    return org.flasck.jvm.fl.FLClosure.obj(this._card, this.getHandler(cxt), new java.lang.Object[1] {
ev
      })
  }
  java.lang.Object getHandler(java.lang.Object _context) {
    return test.golden.Events$okThen.class
  }
}
class Events$handlers_1.java implements org.flasck.jvm.display.EventHandler {
  Ltest/golden/Events; _card

  void <init>(java.lang.Object cxt, java.lang.Object card) {
    super.<init>()
    this._card = ((test.golden.Events)card)
    return
  }
  java.lang.Object handle(java.lang.Object cxt, java.lang.Object ev) {
    return org.flasck.jvm.fl.FLClosure.obj(this._card, this.getHandler(cxt), new java.lang.Object[1] {
ev
      })
  }
  java.lang.Object getHandler(java.lang.Object _context) {
    return new org.flasck.jvm.fl.FLCurry(this,test.golden.Events$setTo.class,2,new java.lang.Object[1] {
        autobox[java.lang.Integer.valueOf(13)]
      })
  }
}
class Events$okThen.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.Events)self).okThen(cxt, args[0])
  }
}
class Events$setTo.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.Events)self).setTo(cxt, args[0], args[1])
  }
}
class Events.java extends org.flasck.jvm.cards.FlasckCard {
  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    super.ready()
    return
  }
  void render(java.lang.Object cxt, java.lang.String into) {
    (void)new test.golden.Events$B1(cxt,this,new org.flasck.jvm.areas.CardArea(this._wrapper,this._display,into))
    return
  }
  java.lang.Object okThen(java.lang.Object _context, java.lang.Object _0) {
    {
      v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Debug.class, new java.lang.Object[1] {
          autobox[_0]
        })
      return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v1]
          autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
        })
    }
  }
  java.lang.Object setTo(java.lang.Object _context, java.lang.Object _0, java.lang.Object _1) {
    {
      v2 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Debug.class, new java.lang.Object[1] {
          autobox[_1]
        })
      return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v2]
          autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
        })
    }
  }
}
