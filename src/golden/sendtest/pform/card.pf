package test.golden
  cdecl test.golden.SetState @{1:0|contract} @{1:9|SetState}
    required down setOn @{2:0|down} @{2:5|setOn}
    required down setOff @{3:0|down} @{3:5|setOff}
  cdecl test.golden.Echo @{5:0|contract} @{5:9|Echo}
    required down saySomething @{6:0|down} @{6:5|saySomething}
      [type] msg @{6:26|msg}
        String @{6:19|String}
    required up echoIt @{7:0|up} @{7:5|echoIt}
      [type] msg @{7:20|msg}
        String @{7:13|String}
  card test.golden.ControlledCard @{9:0|card} @{9:5|ControlledCard}
    state @{10:0|state}
      sayHello @{11:8|sayHello}
        Boolean @{11:0|Boolean}
    template @{13:0|template} @{null}
      '' hello @{14:0|'hello'}
        <apply> @{14:11|styleIf 'show' sayHello}
          styleIf @{14:11|styleIf}
          '' show @{14:19|'show'}
          sayHello @{14:26|sayHello}
        => @{15:6|=>}
          click @{15:0|click}
          echoHello @{15:9|echoHello}
    implements SetState @{17:0|implements} @{17:11|SetState}
      method test.golden.ControlledCard._C0.setOn @{18:0|setOn}
        assign sayHello <- @{19:0|sayHello} @{19:9|<-}
          true @{19:12|true}
      method test.golden.ControlledCard._C0.setOff @{20:0|setOff}
        assign sayHello <- @{21:0|sayHello} @{21:9|<-}
          false @{21:12|false}
    implements Echo e @{23:0|implements} @{23:11|Echo} @{23:16|e}
      method test.golden.ControlledCard._C1.saySomething @{24:0|saySomething}
        [var] msg @{24:13|msg}
        invoke @{25:0|<-}
          <apply> @{25:3|e.echoIt msg}
            <apply> @{25:3|e.echoIt}
              . @{25:4|.}
              e @{25:3|e}
              echoIt @{25:5|echoIt}
            msg @{25:12|msg}
    event test.golden.ControlledCard.echoHello_1 @{27:0|event} @{27:6|echoHello}
      [var] ev @{27:16|ev}
      invoke @{28:0|<-}
        <apply> @{28:3|e.echoIt "hello clicked"}
          <apply> @{28:3|e.echoIt}
            . @{28:4|.}
            e @{28:3|e}
            echoIt @{28:5|echoIt}
          '' hello clicked @{28:12|"hello clicked"}
    test.golden.ControlledCard.styleIf @{30:0|styleIf}
      [var] style @{30:8|style}
      [var] b @{30:14|b}
     =
      if b
        style @{31:9|style}
      else
        ''  @{32:7|''}
