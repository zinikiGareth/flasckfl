class ControlledCard$_C0.java extends test.golden.SetState {
  void <init>(test.golden.ControlledCard card) {
    super.<init>()
    this._card = card
    return
  }
  java.lang.Object setOff() {
    {
      v0 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Assign.class,new java.lang.Object[3] {
autobox[this._card]
autobox["sayHello"]
autobox[false]
})
      return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
  autobox[v0]
  autobox[  org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {
})
]
})
    }
  }
  java.lang.Object setOn() {
    {
      v0 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Assign.class,new java.lang.Object[3] {
autobox[this._card]
autobox["sayHello"]
autobox[true]
})
      return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
  autobox[v0]
  autobox[  org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {
})
]
})
    }
  }
}
class ControlledCard$_C1.java extends test.golden.Echo {
  void <init>(test.golden.ControlledCard card) {
    super.<init>()
    this._card = card
    return
  }
  java.lang.Object saySomething(java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.FLEval.head(_0)
      if (_0 instanceof org.flasck.jvm.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.String) {
        {
          v1 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
autobox[_0]
autobox[org.flasck.jvm.builtin.Nil.eval(        new java.lang.Object[0] {
        })]
})
          v2 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Send.class,new java.lang.Object[3] {
autobox[this._card.e]
autobox["echoIt"]
autobox[v1]
})
          return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
  autobox[v2]
  autobox[  org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {
})
]
})
        }
      }
      return new org.flasck.jvm.FLError("saySomething: case not handled")
    }
  }
}
class ControlledCard$B1.java extends org.flasck.jvm.areas.TextArea {
  void <init>(test.golden.ControlledCard cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._setText("hello")
    this._card._wrapper.onAssign(this._card, "sayHello", this, "_setVariableFormats")
    this._setVariableFormats()
    return
  }
  java.lang.Object _setVariableFormats() {
    super._setCSSObj(this.formats_0())
    return null
  }
  java.lang.Object formats_0() {
    {
      v2 = new org.flasck.jvm.FLClosure(this._card,org.flasck.jvm.FLEval$Curry.class,new java.lang.Object[2] {
autobox[test.golden.ControlledCard$styleIf.class]
autobox[java.lang.Integer.valueOf(2)]
})
      v0 = new org.flasck.jvm.FLClosure(v2,new java.lang.Object[3] {
v2
autobox["show"]
autobox[this._card.sayHello]
})
      return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
  autobox[v0]
  autobox[  org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {
})
]
})
    }
  }
}
class ControlledCard$styleIf.java {
  void <init>(test.golden.ControlledCard card) {
    super.<init>()
    this._card = card
    return
  }
  java.lang.Object eval([java.lang.Object args) {
    return this._card.styleIf(args[0], args[1])
  }
}
class ControlledCard.java extends org.flasck.jvm.cards.FlasckCard {
  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    this.registerContract("test.golden.SetState", new test.golden.ControlledCard$_C0(this))
    this.e = new test.golden.ControlledCard$_C1(this)
    this.registerContract("test.golden.Echo", this.e)
    super.ready()
    return
  }
  void render(java.lang.String into) {
new test.golden.ControlledCard$B1(this,new org.flasck.jvm.areas.CardArea(this._wrapper,this._display,into))    return
  }
  java.lang.Object styleIf(java.lang.Object _0, java.lang.Object _1) {
    {
      if (FLEval.isTruthy(_1)) {
        return _0
      }
      return ""
    }
  }
}
class Echo.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
  abstract java.lang.Object saySomething(java.lang.Object arg0);
}
class SetState.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
  abstract java.lang.Object setOn();
  abstract java.lang.Object setOff();
}
