src/golden/getter/droid-to/test/golden/Getter$choose.java
class Getter$choose.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(org.ziniki.ziwsh.json.FLEvalContext cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.Getter)self).choose(cxt, args[0])
  }
}
src/golden/getter/droid-to/test/golden/Getter.java
class Getter.java extends org.flasck.jvm.cards.FlasckCard {
  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    super.ready()
    return
  }
  java.lang.Object init(java.lang.Object cx) {
    return org.flasck.jvm.builtin.Nil.eval(cx, new java.lang.Object[0] {})
  }
  java.lang.Object choose(org.ziniki.ziwsh.json.FLEvalContext _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof java.lang.String) {
        {
          v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Field.class, new java.lang.Object[2] {
              autobox[this.getVar(_context, "strings")]
              autobox["item"]
            })
          v2 = org.flasck.jvm.fl.FLClosure.simple(v1, new java.lang.Object[1] {
              autobox[_0]
            })
          v3 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Assign.class, new java.lang.Object[3] {
              autobox[this]
              autobox["curr"]
              autobox[v2]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
              autobox[v3]
              autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("choose: case not handled")
    }
  }
}
