class Card$_C0.java extends test.golden.Ctr {
  void <init>(test.golden.Card card) {
    super.<init>()
    this._card = card
    return
  }
  java.lang.Object go() {
    {
      v0 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
autobox[java.lang.Integer.valueOf(42)]
autobox[org.flasck.jvm.builtin.Nil.eval(    new java.lang.Object[0] {
    })]
})
      v1 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Send.class,new java.lang.Object[3] {
autobox[this._card.c]
autobox["put"]
autobox[v0]
})
      v2 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Send.class,new java.lang.Object[3] {
autobox[this._card.c]
autobox["clear"]
autobox[org.flasck.jvm.builtin.Nil.eval(    new java.lang.Object[0] {
    })]
})
      v3 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
autobox[v2]
autobox[org.flasck.jvm.builtin.Nil.eval(    new java.lang.Object[0] {
    })]
})
      return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
  autobox[v1]
  autobox[v3]
})
    }
  }
}
class Card.java extends org.flasck.jvm.cards.FlasckCard {
  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    this.registerContract("test.golden.Ctr", new test.golden.Card$_C0(this))
    super.ready()
    return
  }
}
class Ctr.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
  abstract java.lang.Object go();
}
