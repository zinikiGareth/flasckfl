class Card$ItemHandler$x.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.Card$ItemHandler)self).x(cxt, args[0])
  }
}
class Card$ItemHandler.java extends test.golden.KVUpdate$Impl {
  Ltest/golden/Card; _card
  Ljava/lang/Object; ck

  void <init>(java.lang.Object cxt, java.lang.Object card, java.lang.Object ck) {
    super.<init>(((test.golden.Card)org.flasck.jvm.fl.FLEval.full(cxt, card)).getDespatcher())
    this._card = ((test.golden.Card)org.flasck.jvm.fl.FLEval.full(cxt, card))
    this.ck = org.flasck.jvm.fl.FLEval.head(cxt, ck)
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object card, [java.lang.Object args) {
    if (args.length<1) {
      return new org.flasck.jvm.fl.FLCurry(card,test.golden.Card$ItemHandler.class,args)
    } else {
      return new test.golden.Card$ItemHandler(cxt,card,args[0])
    }
  }
  java.lang.Object update(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.FLNumber) {
        {
          v2 = org.flasck.jvm.fl.FLClosure.obj(this, test.golden.Card$ItemHandler$x.class, new java.lang.Object[1] {
              autobox[_0]
            })
          v3 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
              autobox[v2]
              autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
            })
          v4 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Send.class, new java.lang.Object[3] {
              autobox[this._card.ds]
              autobox["insert"]
              autobox[v3]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
              autobox[v4]
              autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("update: case not handled")
    }
  }
  java.lang.Object x(java.lang.Object _context, java.lang.Object _s0) {
    return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$+.class, new java.lang.Object[2] {
        autobox[this.ck]
        autobox[_s0]
      })
  }
}
class Card$_C0.java extends test.golden.DataStore$Impl {
  Ltest/golden/Card; _card

  void <init>(test.golden.Card card) {
    super.<init>(card.getDespatcher())
    this._card = card
    return
  }
}
class Card.java extends org.flasck.jvm.cards.FlasckCard {
  Ltest/golden/Card$_C0; ds

  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    this.ds = new test.golden.Card$_C0(this)
    this.registerContract("test.golden.DataStore", this.ds)
    super.ready()
    return
  }
  java.lang.Object init(java.lang.Object cx) {
    return org.flasck.jvm.builtin.Nil.eval(cx, new java.lang.Object[0] {})
  }
}
class DataStore$Down.java implements org.ziniki.ziwsh.DownContract {
}
class DataStore$Impl.java extends org.flasck.jvm.cards.ContractImpl implements test.golden.DataStore$Down {
  void <init>(org.ziniki.ziwsh.postbox.IDespatcher despatcher) {
    super.<init>(despatcher)
    return
  }
}
class DataStore$Up.java implements org.ziniki.ziwsh.UpContract {
  abstract java.lang.Object insert(java.lang.Object from, org.flasck.jvm.builtin.FLNumber obj);
}
class KVUpdate$Down.java implements org.ziniki.ziwsh.DownContract {
  abstract java.lang.Object update(java.lang.Object from, org.flasck.jvm.builtin.FLNumber obj);
}
class KVUpdate$Impl.java extends org.flasck.jvm.cards.ContractImpl implements test.golden.KVUpdate$Down {
  void <init>(org.ziniki.ziwsh.postbox.IDespatcher despatcher) {
    super.<init>(despatcher)
    return
  }
  abstract java.lang.Object update(java.lang.Object from, org.flasck.jvm.builtin.FLNumber obj);
}
class KVUpdate$Up.java implements org.ziniki.ziwsh.UpContract {
}
