class Container.java extends org.flasck.jvm.FLASObject {
  void <init>() {
    super.<init>()
    return
  }
  void _doFullEval() {
    this.title = this._fullOf(this.title)
    return
  }
}
class MyCard$B1.java extends org.flasck.jvm.areas.TextArea {
  void <init>(test.golden.MyCard cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "c", this, "_contentExpr")
    this._card._wrapper.onAssign(this._card.c, "title", this, "_contentExpr")
    (void)this._contentExpr()
    this.setCSS("flasck-editable")
    return
  }
  java.lang.Object _contentExpr() {
    super._assignToText(this.contents_0())
    return null
  }
  java.lang.Object contents_0() {
    return new org.flasck.jvm.FLClosure(org.flasck.jvm.FLEval$Field.class,new java.lang.Object[2] {
        autobox[this._card.c]
        autobox["title"]
      })
  }
  java.lang.Object editcontainer_1() {
    return this._card.c
  }
}
class MyCard.java extends org.flasck.jvm.cards.FlasckCard {
  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    super.ready()
    return
  }
  void render(java.lang.String into) {
    (void)new test.golden.MyCard$B1(this,new org.flasck.jvm.areas.CardArea(this._wrapper,this._display,into))
    return
  }
}
