class Hc.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
  abstract java.lang.Object reply();
}
class PACKAGEFUNCTIONS$scoped.java {
  static java.lang.Object eval([java.lang.Object args) {
    return test.golden.PACKAGEFUNCTIONS.scoped(args[0])
  }
}
class PACKAGEFUNCTIONS.java {
  static java.lang.Object scoped(java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.FLEval.head(_0)
      if (_0 instanceof org.flasck.jvm.FLError) {
        return _0
      }
      if (_0 instanceof test.golden.UpC) {
        {
          v5 = new org.flasck.jvm.FLClosure(test.golden.scoped_0$MyHc.class,new java.lang.Object[1] {
              autobox["test.golden.scoped_0.requestObj"]
            })
          v6 = new org.flasck.jvm.FLClosure(test.golden.scoped_0$request.class,new java.lang.Object[2] {
              autobox[v5]
              autobox[_0]
            })
          v7 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
              autobox[v6]
              autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
            })
          return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.MessageWrapper.class,new java.lang.Object[2] {
              autobox[java.lang.Integer.valueOf(32)]
              autobox[v7]
            })
        }
      }
      return new org.flasck.jvm.FLError("scoped: case not handled")
    }
  }
}
class scoped_0$MyHc.java extends test.golden.Hc {
  void <init>(java.lang.Object requestObj) {
    super.<init>()
    this.requestObj = org.flasck.jvm.FLEval.head(requestObj)
    return
  }
  static java.lang.Object eval([java.lang.Object args) {
    if (args.length<1) {
      return new org.flasck.jvm.FLCurry(null,test.golden.scoped_0$MyHc.class,args)
    } else {
      return new test.golden.scoped_0$MyHc(args[0])
    }
  }
  java.lang.Object reply(org.flasck.jvm.post.DeliveryAddress _fromDA) {
    {
      v0 = new org.flasck.jvm.FLClosure(this.requestObj,new java.lang.Object[0] {})
      return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
          autobox[v0]
          autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
        })
    }
  }
}
class UpC.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
}
class PACKAGEFUNCTIONS$request.java {
  static java.lang.Object eval([java.lang.Object args) {
    return test.golden.scoped_0.PACKAGEFUNCTIONS.request(args[0], args[1])
  }
}
class PACKAGEFUNCTIONS$requestObj.java {
  static java.lang.Object eval([java.lang.Object args) {
    return test.golden.scoped_0.PACKAGEFUNCTIONS.requestObj()
  }
}
class PACKAGEFUNCTIONS.java {
  static java.lang.Object request(java.lang.Object _s0, java.lang.Object _s1) {
    {
      v0 = new org.flasck.jvm.FLClosure(test.golden.scoped_0$MyHc.class,new java.lang.Object[0] {})
      v1 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
          autobox[v0]
          autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
        })
      v2 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Send.class,new java.lang.Object[3] {
          autobox[_s1]
          autobox["call"]
          autobox[v1]
        })
      return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
          autobox[v2]
          autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
        })
    }
  }
  static java.lang.Object requestObj() {
    return org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})
  }
}
