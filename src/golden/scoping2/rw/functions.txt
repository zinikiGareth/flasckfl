function test.golden.scoped 1
  nested test.golden.scoped_0.request test.golden.scoped
  case test.golden.scoped_0
    typed contract test.golden.UpC test.golden.scoped_0.ctr
  =
    @
      PackageVar.MessageWrapper
      32
      @
        PackageVar.Cons
        ScopedVar.Scoped[test.golden.scoped_0.request]
        PackageVar.Nil
function test.golden.scoped_0.MyHc.reply 0
  case test.golden.scoped_0.MyHc.reply_0
  =
    @
      PackageVar.Cons
      ?? class org.flasck.flas.rewrittenForm.TypeCheckMessages:(#tcMessages (HL[test.golden.scoped_0.MyHc.requestObj]))
      PackageVar.Nil
function test.golden.scoped_0.request 0
  nested test.golden.scoped_0.MyHc test.golden.scoped
  nested test.golden.scoped_0.ctr test.golden.scoped
  case test.golden.scoped_0.request_0
  =
    @
      PackageVar.Cons
      <-
        ScopedVar.Scoped[test.golden.scoped_0.ctr]
        "call"
        @
          ScopedVar.Scoped[test.golden.scoped_0.MyHc]
      PackageVar.Nil
function test.golden.scoped_0.requestObj 0
  case test.golden.scoped_0.requestObj_0
  =
    PackageVar.Nil
