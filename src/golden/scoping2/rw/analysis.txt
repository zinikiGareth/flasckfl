handler test.golden.scoped_0.MyHc *function*
  lambda test.golden.scoped_0.MyHc requestObj
  method test.golden.scoped_0.MyHc.reply
    case test.golden.scoped_0.MyHc.reply
    =
      <-
        HandlerLambda.HL[test.golden.scoped_0.MyHc.requestObj]
method test.golden.scoped_0.request
  nested test.golden.scoped_0.MyHc test.golden.scoped
  nested test.golden.scoped_0.ctr test.golden.scoped
  case test.golden.scoped_0.request
  =
    <-
      @
        @
          PackageVar.FLEval.field
          ScopedVar.Scoped[test.golden.scoped_0.ctr]
          "call"
        @
          ScopedVar.Scoped[test.golden.scoped_0.MyHc]
method test.golden.scoped_0.requestObj
  case test.golden.scoped_0.requestObj
  =
function test.golden.scoped 1
  nested test.golden.scoped_0.request test.golden.scoped
  case test.golden.scoped_0
    typed contract test.golden.UpC test.golden.scoped_0.ctr
  =
    @
      PackageVar.MessageWrapper
      32
      @
        PackageVar.Cons
        ScopedVar.Scoped[test.golden.scoped_0.request]
        PackageVar.Nil
