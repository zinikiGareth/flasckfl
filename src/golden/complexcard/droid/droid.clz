class ClickIt.java extends org.flasck.jvm.FLASObject {
  void <init>() {
    super.<init>()
    return
  }
  void _doFullEval() {
    return
  }
}
class Complex$B1.java extends org.flasck.jvm.areas.DivArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "hello", this, "_setAttr_1")
    this._setAttr_1()
    b2 = new test.golden.Complex$B2(cardArg,this)
    b3 = new test.golden.Complex$B3(cardArg,this)
    b6 = new test.golden.Complex$B6(cardArg,this)
    b9 = new test.golden.Complex$B9(cardArg,this)
    return
  }
  java.lang.Object teas_0() {
    return this._card.hello
  }
}
class Complex$B10.java extends org.flasck.jvm.areas.CardSlotArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    return
  }
}
class Complex$B11.java extends org.flasck.jvm.areas.CardSlotArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "yoyo", this, "_yoyoExpr")
    this._yoyoExpr()
    return
  }
  java.lang.Object _yoyoExpr() {
    return null
  }
  java.lang.Object yoyos_8() {
    return this._card.yoyo
  }
}
class Complex$B2.java extends org.flasck.jvm.areas.TextArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "hello", this, "_contentExpr")
    this._contentExpr()
    this._card._wrapper.onAssign(this._card, "format", this, "_setVariableFormats")
    this._setVariableFormats()
    return
  }
  java.lang.Object _contentExpr() {
    super._assignToText(this.contents_1())
    return null
  }
  java.lang.Object _setVariableFormats() {
    super._setCSSObj(this.formats_2())
    return null
  }
  java.lang.Object contents_1() {
    return this._card.hello
  }
  java.lang.Object formats_2() {
    return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
  autobox[this._card.format]
  autobox[  org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {
})
]
})
  }
}
class Complex$B3.java extends org.flasck.jvm.areas.ListArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "list", this, "_assignToVar")
    return
  }
  org.flasck.jvm.areas.Area _newChild(org.flasck.jvm.builtin.Crokey crokey) {
    ret = new test.golden.Complex$B4(this._card,this)
    ret.bindVar("_crokey", crokey.id)
    return ret
  }
  java.lang.Object lvs_3() {
    return this._card.list
  }
}
class Complex.java extends org.flasck.jvm.cards.FlasckCard {
  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    this.registerContract("test.golden.Init", new test.golden.Complex$_C0(this))
    this.ds = new test.golden.Complex$_C1(this)
    this.registerContract("test.golden.DataStore", this.ds)
    super.ready()
    return
  }
  void render(java.lang.String into) {
new test.golden.Complex$B1(this,new org.flasck.jvm.areas.CardArea(this._wrapper,this._display,into))    return
  }
  java.lang.Object sayHello(java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.FLEval.head(_0)
      if (_0 instanceof org.flasck.jvm.FLError) {
        return _0
      }
      if (_0 instanceof test.golden.ClickIt) {
        {
          v1 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Assign.class,new java.lang.Object[3] {
autobox[this]
autobox["hello"]
autobox["goodbye"]
})
          return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
  autobox[v1]
  autobox[  org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {
})
]
})
        }
      }
      return new org.flasck.jvm.FLError("sayHello: case not handled")
    }
  }
  java.lang.Object styleIf(java.lang.Object _0, java.lang.Object _1) {
    {
      if (FLEval.isTruthy(_1)) {
        return _0
      }
      return ""
    }
  }
}
