class ClickIt.java extends org.flasck.jvm.FLASObject {
  void <init>() {
    super.<init>()
    return
  }
  void _doFullEval() {
    return
  }
}
class Complex$_C0.java extends test.golden.Init {
  void <init>(test.golden.Complex card) {
    super.<init>()
    this._card = card
    return
  }
  java.lang.Object ready(org.flasck.jvm.post.DeliveryAddress _fromDA, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.FLEval.head(_0)
      if (_0 instanceof org.flasck.jvm.FLError) {
        return _0
      }
      if (_0 instanceof test.golden.Thing) {
        {
          v1 = new org.flasck.jvm.FLClosure(org.flasck.jvm.FLEval$Field.class,new java.lang.Object[2] {
              autobox[_0]
              autobox["x"]
            })
          v2 = new org.flasck.jvm.FLClosure(this._card,test.golden.Complex$FooHandler.class,new java.lang.Object[1] {
              autobox["yo"]
            })
          v3 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
              autobox[v2]
              autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
            })
          v4 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
              autobox[v1]
              autobox[v3]
            })
          v5 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Send.class,new java.lang.Object[3] {
              autobox[this._card.ds]
              autobox["get"]
              autobox[v4]
            })
          return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
              autobox[v5]
              autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
            })
        }
      }
      return new org.flasck.jvm.FLError("ready: case not handled")
    }
  }
}
class Complex$_C1.java extends test.golden.DataStore {
  void <init>(test.golden.Complex card) {
    super.<init>()
    this._card = card
    return
  }
}
class Complex$_S0.java extends test.golden.Offer {
  void <init>(test.golden.Complex card) {
    super.<init>()
    this._card = card
    return
  }
  java.lang.Object get(org.flasck.jvm.post.DeliveryAddress _fromDA, java.lang.Object _0, java.lang.Object _1) {
    {
      _1 = org.flasck.jvm.FLEval.head(_1)
      if (_1 instanceof org.flasck.jvm.FLError) {
        return _1
      }
      if (_1 instanceof test.golden.Handler) {
        {
          _0 = org.flasck.jvm.FLEval.head(_0)
          if (_0 instanceof org.flasck.jvm.FLError) {
            return _0
          }
          if (_0 instanceof java.lang.String) {
            {
              v2 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
                  autobox[_0]
                  autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
                })
              v3 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Send.class,new java.lang.Object[3] {
                  autobox[_1]
                  autobox["reply"]
                  autobox[v2]
                })
              return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
                  autobox[v3]
                  autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
                })
            }
          }
        }
      }
      return new org.flasck.jvm.FLError("get: case not handled")
    }
  }
}
class Complex$B1.java extends org.flasck.jvm.areas.DivArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "hello", this, "_setAttr_1")
    (void)this._setAttr_1()
    b2 = new test.golden.Complex$B2(cardArg,this)
    b3 = new test.golden.Complex$B3(cardArg,this)
    b6 = new test.golden.Complex$B6(cardArg,this)
    b9 = new test.golden.Complex$B9(cardArg,this)
    return
  }
  java.lang.Object teas_0() {
    return this._card.hello
  }
}
class Complex$B10.java extends org.flasck.jvm.areas.CardSlotArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    return
  }
}
class Complex$B11.java extends org.flasck.jvm.areas.CardSlotArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "yoyo", this, "_yoyoExpr")
    (void)this._yoyoExpr()
    return
  }
  java.lang.Object _yoyoExpr() {
    return null
  }
  java.lang.Object yoyos_8() {
    return this._card.yoyo
  }
}
class Complex$B2.java extends org.flasck.jvm.areas.TextArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "hello", this, "_contentExpr")
    (void)this._contentExpr()
    this._card._wrapper.onAssign(this._card, "format", this, "_setVariableFormats")
    (void)this._setVariableFormats()
    return
  }
  java.lang.Object _contentExpr() {
    super._assignToText(this.contents_1())
    return null
  }
  java.lang.Object _setVariableFormats() {
    super._setCSSObj(this.formats_2())
    return null
  }
  java.lang.Object contents_1() {
    return this._card.hello
  }
  java.lang.Object formats_2() {
    return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
        autobox[this._card.format]
        autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
      })
  }
}
class Complex$B3.java extends org.flasck.jvm.areas.ListArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "list", this, "_assignToVar")
    return
  }
  org.flasck.jvm.areas.Area _newChild(org.flasck.jvm.builtin.Crokey crokey) {
    ret = new test.golden.Complex$B4(this._card,this)
    ret.bindVar("_crokey", crokey.id)
    return ret
  }
  java.lang.Object lvs_3() {
    return this._card.list
  }
}
class Complex$B4.java extends org.flasck.jvm.areas.DivArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, "li")
    this._card = cardArg
    this._src_lv = this
    b5 = new test.golden.Complex$B5(cardArg,this)
    return
  }
  java.lang.Object _assignToVar(java.lang.Object obj) {
    if (this.lv==obj) {
      return null
    }
    this._wrapper.removeOnCrosetReplace(((org.flasck.jvm.areas.ListArea)this._parent)._current, this, this.lv)
    this.lv = obj
    this._wrapper.onCrosetReplace(((org.flasck.jvm.areas.ListArea)this._parent)._current, this, this.lv)
    this._fireInterests()
    return null
  }
}
class Complex$B5.java extends org.flasck.jvm.areas.TextArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._src_lv = ((test.golden.Complex$B4)parent)._src_lv
    this._src_lv._interested(this, "_contentExpr")
    (void)this._contentExpr()
    return
  }
  java.lang.Object _contentExpr() {
    super._assignToText(this.contents_4())
    return null
  }
  java.lang.Object contents_4() {
    return this._src_lv.lv
  }
}
class Complex$B6.java extends org.flasck.jvm.areas.ListArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "list", this, "_assignToVar")
    return
  }
  org.flasck.jvm.areas.Area _newChild(org.flasck.jvm.builtin.Crokey crokey) {
    ret = new test.golden.Complex$B7(this._card,this)
    ret.bindVar("_crokey", crokey.id)
    return ret
  }
  java.lang.Object lvs_5() {
    return this._card.list
  }
}
class Complex$B7.java extends org.flasck.jvm.areas.DivArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, "li")
    this._card = cardArg
    b8 = new test.golden.Complex$B8(cardArg,this)
    return
  }
}
class Complex$B8.java extends org.flasck.jvm.areas.TextArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._setText("hello")
    (void)this._add_handlers()
    return
  }
  java.lang.Object _add_handlers() {
    return null
  }
  java.lang.Object handlers_6() {
    return test.golden.Complex$sayHello.class
  }
}
class Complex$B9.java extends org.flasck.jvm.areas.CasesArea {
  void <init>(test.golden.Complex cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "hello", this, "_chooseCase")
    (void)this._chooseCase()
    return
  }
  java.lang.Object ors_7() {
    return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$==.class,new java.lang.Object[2] {
        autobox[this._card.hello]
        autobox["hello"]
      })
  }
}
class Complex$FooHandler.java extends test.golden.Handler {
  void <init>(java.lang.Object card, java.lang.Object k) {
    super.<init>()
    this._card = ((test.golden.Complex)org.flasck.jvm.FLEval.full(card))
    this.k = org.flasck.jvm.FLEval.head(k)
    return
  }
  static java.lang.Object eval(java.lang.Object card, [java.lang.Object args) {
    if (args.length<1) {
      return new org.flasck.jvm.FLCurry(card,test.golden.Complex$FooHandler.class,args)
    } else {
      return new test.golden.Complex$FooHandler(card,args[0])
    }
  }
  java.lang.Object reply(org.flasck.jvm.post.DeliveryAddress _fromDA, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.FLEval.head(_0)
      if (_0 instanceof org.flasck.jvm.FLError) {
        return _0
      }
      if (_0 instanceof java.lang.String) {
        {
          v1 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$++.class,new java.lang.Object[2] {
              autobox[this.k]
              autobox[_0]
            })
          v2 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Assign.class,new java.lang.Object[3] {
              autobox[this._card]
              autobox["hello"]
              autobox[v1]
            })
          return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
              autobox[v2]
              autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
            })
        }
      }
      return new org.flasck.jvm.FLError("reply: case not handled")
    }
  }
}
class Complex$styleIf.java {
  void <init>(test.golden.Complex card) {
    super.<init>()
    this._card = card
    return
  }
  static java.lang.Object eval(java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.Complex)self).styleIf(args[0], args[1])
  }
}
class Complex.java extends org.flasck.jvm.cards.FlasckCard {
  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    this.registerContract("test.golden.Init", new test.golden.Complex$_C0(this))
    this.ds = new test.golden.Complex$_C1(this)
    this.registerContract("test.golden.DataStore", this.ds)
    super.ready()
    return
  }
  void render(java.lang.String into) {
    (void)new test.golden.Complex$B1(this,new org.flasck.jvm.areas.CardArea(this._wrapper,this._display,into))
    return
  }
  java.lang.Object sayHello(java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.FLEval.head(_0)
      if (_0 instanceof org.flasck.jvm.FLError) {
        return _0
      }
      if (_0 instanceof test.golden.ClickIt) {
        {
          v1 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Assign.class,new java.lang.Object[3] {
              autobox[this]
              autobox["hello"]
              autobox["goodbye"]
            })
          return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
              autobox[v1]
              autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
            })
        }
      }
      return new org.flasck.jvm.FLError("sayHello: case not handled")
    }
  }
  java.lang.Object styleIf(java.lang.Object _0, java.lang.Object _1) {
    {
      if (org.flasck.jvm.FLEval.isTruthy(_1)) {
        return _0
      }
      return ""
    }
  }
}
class DataStore.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
}
class Handler.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
  abstract java.lang.Object reply(java.lang.Object arg0);
}
class Init.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
  abstract java.lang.Object ready(java.lang.Object arg0);
}
class Offer.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
}
class Polyed.java extends org.flasck.jvm.FLASObject {
  void <init>() {
    super.<init>()
    return
  }
  void _doFullEval() {
    this.x = this._fullOf(this.x)
    this.y = this._fullOf(this.y)
    this.z = this._fullOf(this.z)
    return
  }
}
class SubCard.java extends org.flasck.jvm.cards.FlasckCard {
  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    super.ready()
    return
  }
}
class Thing.java extends org.flasck.jvm.FLASObject {
  void <init>() {
    super.<init>()
    return
  }
  void _doFullEval() {
    this.x = this._fullOf(this.x)
    return
  }
}
class WithInit.java extends org.flasck.jvm.FLASObject {
  void <init>() {
    super.<init>()
    return
  }
  void _doFullEval() {
    this.x = this._fullOf(this.x)
    return
  }
}
class PACKAGEFUNCTIONS$inits_format.java {
  static java.lang.Object eval([java.lang.Object args) {
    return test.golden.Complex.PACKAGEFUNCTIONS.inits_format()
  }
}
class PACKAGEFUNCTIONS$inits_hello.java {
  static java.lang.Object eval([java.lang.Object args) {
    return test.golden.Complex.PACKAGEFUNCTIONS.inits_hello()
  }
}
class PACKAGEFUNCTIONS.java {
  static java.lang.Object inits_format() {
    return "basic"
  }
  static java.lang.Object inits_hello() {
    return "hello, world"
  }
}
class PACKAGEFUNCTIONS$inits_x.java {
  static java.lang.Object eval([java.lang.Object args) {
    return test.golden.WithInit.PACKAGEFUNCTIONS.inits_x()
  }
}
class PACKAGEFUNCTIONS.java {
  static java.lang.Object inits_x() {
    return "hello"
  }
}
