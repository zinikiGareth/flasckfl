package test.golden
  struct test.golden.ClickIt @{3:0|struct} @{3:7|ClickIt}
  struct test.golden.Thing @{5:0|struct} @{5:7|Thing}
    x @{6:7|x}
      String @{6:0|String}
  struct test.golden.Polyed T1 T2 @{8:0|struct} @{8:7|Polyed} @{8:14|T1} @{8:17|T2}
    x @{9:7|x}
      String @{9:0|String}
    y @{10:3|y}
      T1 @{10:0|T1}
    z @{11:9|z}
      List @{11:0|List}
        T2 @{11:5|T2}
  struct test.golden.WithInit @{13:0|struct} @{13:7|WithInit}
    x @{14:7|x}
      String @{14:0|String}
     <- @{14:9|<-}
      '' hello @{14:12|'hello'}
  cdecl test.golden.Init @{18:0|contract} @{18:9|Init}
    required down ready @{19:0|down} @{19:5|ready}
      [type] obj @{19:16|obj}
        Any @{19:12|Any}
  cdecl test.golden.Handler @{21:0|contract} @{21:9|Handler}
    required down reply @{22:0|down} @{22:5|reply}
      [type] s @{22:19|s}
        String @{22:12|String}
  cdecl test.golden.DataStore @{24:0|contract} @{24:9|DataStore}
    required up get @{25:0|up} @{25:3|get}
      [type] x @{25:15|x}
        String @{25:8|String}
      [type] h @{25:27|h}
        Handler @{25:19|Handler}
  cdecl test.golden.Offer @{27:0|contract} @{27:9|Offer}
    required up get @{28:0|up} @{28:3|get}
      [type] x @{28:15|x}
        String @{28:8|String}
      [type] h @{28:27|h}
        Handler @{28:19|Handler}
  card test.golden.SubCard @{30:0|card} @{30:5|SubCard}
  card test.golden.Complex @{32:0|card} @{32:5|Complex}
    state @{33:0|state}
      hello @{34:7|hello}
        String @{34:0|String}
       <- @{34:13|<-}
        '' hello, world @{34:16|"hello, world"}
      format @{35:7|format}
        String @{35:0|String}
       <- @{35:14|<-}
        '' basic @{35:17|"basic"}
      list @{36:15|list}
        Croset @{36:0|Croset}
          String @{36:7|String}
      mapper @{37:15|mapper}
        -> @{37:6|->}
          String @{37:0|String}
          String @{37:8|String}
      yoyo @{38:5|yoyo}
        Card @{38:0|Card}
    template @{40:0|template} @{null}
      . @{41:0|.}
        attr title @{41:9|hello}
          hello @{41:9|hello}
        <cexpr> @{42:0|hello}
          hello @{42:0|hello}
          format format @{42:8|format}
        + list lv @{43:0|+} @{43:2|list} @{43:7|lv}
          . @{44:0|.}
            <cexpr> @{45:0|lv}
              lv @{45:0|lv}
        + list @{46:0|+} @{46:2|list}
          . @{47:0|.}
            '' hello @{48:0|"hello"}
              => @{49:6|=>}
                click @{49:0|click}
                sayHello @{49:9|sayHello}
        Cases @{50:0|||}
          hello @{50:3|hello}
          Or @{51:0||}
            '' hello @{51:2|'hello'}
            Explicit SubCard @{52:2|SubCard}
          Else @{53:0||}
            Yoyo yoyo @{54:2|yoyo}
    implements Init @{56:0|implements} @{56:11|Init}
      method test.golden.Complex._C0.ready @{57:0|ready}
        [type] obj @{57:13|obj}
          Thing @{57:7|Thing}
        invoke @{58:0|<-}
          <apply> @{58:3|ds.get obj.x (FooHandler 'yo')}
            <apply> @{58:3|ds.get}
              . @{58:5|.}
              ds @{58:3|ds}
              get @{58:6|get}
            <apply> @{58:10|obj.x}
              . @{58:13|.}
              obj @{58:10|obj}
              x @{58:14|x}
            <apply> @{58:16|(FooHandler 'yo')}
              FooHandler @{58:17|FooHandler}
              '' yo @{58:28|'yo'}
    implements DataStore ds @{60:0|implements} @{60:11|DataStore} @{60:21|ds}
    handler Handler test.golden.Complex.FooHandler (card) @{62:0|handler} @{62:8|Handler} @{62:16|FooHandler}
      [var] k @{62:27|k}
      method test.golden.Complex.FooHandler.reply @{63:0|reply}
        [var] x @{63:6|x}
        assign hello <- @{64:0|hello} @{64:6|<-}
          <apply> @{64:9|k ++ x}
            ++ @{64:11|++}
            k @{64:9|k}
            x @{64:14|x}
    service Offer @{69:0|service} @{69:8|Offer}
      method test.golden.Complex._S0.get @{70:0|get}
        [var] x @{70:4|x}
        [var] h @{70:6|h}
        invoke @{71:0|<-}
          <apply> @{71:3|h.reply x}
            <apply> @{71:3|h.reply}
              . @{71:4|.}
              h @{71:3|h}
              reply @{71:5|reply}
            x @{71:11|x}
    event test.golden.Complex.sayHello_1 @{66:0|event} @{66:6|sayHello}
      [type] ev @{66:24|ev}
        ClickIt @{66:16|ClickIt}
      assign hello <- @{67:0|hello} @{67:6|<-}
        '' goodbye @{67:9|'goodbye'}
