package test.golden
  struct test.golden.ClickIt @{3:0|struct} @{3:7|ClickIt}
  struct test.golden.Thing @{5:0|struct} @{5:7|Thing}
    x @{6:7|x}
      String @{6:0|String}
  struct test.golden.Polyed T1 T2 @{8:0|struct} @{8:7|Polyed} @{8:14|T1} @{8:17|T2}
    x @{9:7|x}
      String @{9:0|String}
    y @{10:3|y}
      T1 @{10:0|T1}
    z @{11:9|z}
      List @{11:0|List}
        T2 @{11:5|T2}
  cdecl test.golden.Init @{15:0|contract} @{15:9|Init}
    required down ready @{16:0|down} @{16:5|ready}
      [type] obj @{16:16|obj}
        Any @{16:12|Any}
  cdecl test.golden.Handler @{18:0|contract} @{18:9|Handler}
    required down reply @{19:0|down} @{19:5|reply}
      [type] s @{19:19|s}
        String @{19:12|String}
  cdecl test.golden.DataStore @{21:0|contract} @{21:9|DataStore}
    required up get @{22:0|up} @{22:3|get}
      [type] x @{22:15|x}
        String @{22:8|String}
      [type] h @{22:27|h}
        Handler @{22:19|Handler}
  cdecl test.golden.Offer @{24:0|contract} @{24:9|Offer}
    required up get @{25:0|up} @{25:3|get}
      [type] x @{25:15|x}
        String @{25:8|String}
      [type] h @{25:27|h}
        Handler @{25:19|Handler}
  card test.golden.SubCard @{27:0|card} @{27:5|SubCard}
  card test.golden.Complex @{29:0|card} @{29:5|Complex}
    state @{30:0|state}
      hello @{31:7|hello}
        String @{31:0|String}
       <- @{31:13|<-}
        '' hello, world @{31:16|"hello, world"}
      list @{32:15|list}
        Croset @{32:0|Croset}
          String @{32:7|String}
      mapper @{33:15|mapper}
        -> @{33:6|->}
          String @{33:0|String}
          String @{33:8|String}
      yoyo @{34:5|yoyo}
        Card @{34:0|Card}
    template @{36:0|template} @{null}
      . @{37:0|.}
        <cexpr> @{38:0|hello}
          hello @{38:0|hello}
        + list lv @{39:0|+} @{39:2|list} @{39:7|lv}
          . @{40:0|.}
            <cexpr> @{41:0|lv}
              lv @{41:0|lv}
        + list @{42:0|+} @{42:2|list}
          . @{43:0|.}
            '' hello @{44:0|"hello"}
              => @{45:6|=>}
                click @{45:0|click}
                sayHello @{45:9|sayHello}
        Cases @{46:0|||}
          hello @{46:3|hello}
          Or @{47:0||}
            '' hello @{47:2|'hello'}
            Explicit SubCard @{48:2|SubCard}
          Else @{49:0||}
            Yoyo yoyo @{50:2|yoyo}
    implements Init @{52:0|implements} @{52:11|Init}
      method test.golden.Complex._C0.ready @{53:0|ready}
        [type] obj @{53:13|obj}
          Thing @{53:7|Thing}
        invoke @{54:0|<-}
          <apply> @{54:3|ds.get obj.x (FooHandler 'yo')}
            <apply> @{54:3|ds.get}
              . @{54:5|.}
              ds @{54:3|ds}
              get @{54:6|get}
            <apply> @{54:10|obj.x}
              . @{54:13|.}
              obj @{54:10|obj}
              x @{54:14|x}
            <apply> @{54:16|(FooHandler 'yo')}
              FooHandler @{54:17|FooHandler}
              '' yo @{54:28|'yo'}
    implements DataStore ds @{56:0|implements} @{56:11|DataStore} @{56:21|ds}
    handler Handler test.golden.Complex.FooHandler (card) @{58:0|handler} @{58:8|Handler} @{58:16|FooHandler}
      [var] k @{58:27|k}
      method test.golden.Complex.FooHandler.reply @{59:0|reply}
        [var] x @{59:6|x}
        assign hello <- @{60:0|hello} @{60:6|<-}
          <apply> @{60:9|k ++ x}
            ++ @{60:11|++}
            k @{60:9|k}
            x @{60:14|x}
    service Offer @{65:0|service} @{65:8|Offer}
      method test.golden.Complex._S0.get @{66:0|get}
        [var] x @{66:4|x}
        [var] h @{66:6|h}
        invoke @{67:0|<-}
          <apply> @{67:3|h.reply x}
            <apply> @{67:3|h.reply}
              . @{67:4|.}
              h @{67:3|h}
              reply @{67:5|reply}
            x @{67:11|x}
    event test.golden.Complex.sayHello_1 @{62:0|event} @{62:6|sayHello}
      [type] ev @{62:24|ev}
        ClickIt @{62:16|ClickIt}
      assign hello <- @{63:0|hello} @{63:6|<-}
        '' goodbye @{63:9|'goodbye'}
