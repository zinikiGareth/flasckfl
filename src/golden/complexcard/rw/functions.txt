function test.golden.Complex.B1.teas_0 test.golden.Complex 0
  case test.golden.Complex.B1.teas_0_0
  =
    CardMember.CardMember[test.golden.Complex.hello]
function test.golden.Complex.B11.yoyos_8 test.golden.Complex 0
  case test.golden.Complex.B11.yoyos_8_0
  =
    CardMember.CardMember[test.golden.Complex.yoyo]
function test.golden.Complex.B2.contents_1 test.golden.Complex 0
  case test.golden.Complex.B2.contents_1_0
  =
    CardMember.CardMember[test.golden.Complex.hello]
function test.golden.Complex.B2.formats_2 test.golden.Complex 0
  case test.golden.Complex.B2.formats_2_0
  =
    @
      PackageVar.Cons
      CardMember.CardMember[test.golden.Complex.format]
      PackageVar.Nil
function test.golden.Complex.B3.lvs_3 test.golden.Complex 0
  case test.golden.Complex.B3.lvs_3_0
  =
    CardMember.CardMember[test.golden.Complex.list]
function test.golden.Complex.B5.contents_4 test.golden.Complex 0
  case test.golden.Complex.B5.contents_4_0
  =
    ?? class org.flasck.flas.commonBase.template.TemplateListVar:TLV[test.golden.Complex.lv<-test.golden.Complex.B3.lvs_3]
function test.golden.Complex.B6.lvs_5 test.golden.Complex 0
  case test.golden.Complex.B6.lvs_5_0
  =
    CardMember.CardMember[test.golden.Complex.list]
function test.golden.Complex.B9.ors_7 test.golden.Complex 0
  case test.golden.Complex.B9.ors_7_0
  =
    @
      PackageVar.==
      CardMember.CardMember[test.golden.Complex.hello]
      "hello"
function test.golden.Complex.FooHandler.reply test.golden.Complex 1
  case test.golden.Complex.FooHandler.reply_0
    typed String test.golden.Complex.FooHandler.reply.x
  =
    @
      PackageVar.Cons
      @
        PackageVar.Assign
        ?? class org.flasck.flas.rewrittenForm.CardStateRef:this._card
        "hello"
        ?? class org.flasck.flas.rewrittenForm.AssertTypeExpr:(#assertType String (++ HL[test.golden.Complex.FooHandler.k] test.golden.Complex.FooHandler.reply.x))
      PackageVar.Nil
function test.golden.Complex._C0.ready test.golden.Complex 1
  case test.golden.Complex._C0.ready_0
    typed test.golden.Thing test.golden.Complex._C0.ready.obj
  =
    @
      PackageVar.Cons
      <-
        CardMember.CardMember[test.golden.Complex.ds]
        "get"
        @
          PackageVar.FLEval.field
          LocalVar.test.golden.Complex._C0.ready.obj
          "x"
        @
          ObjectReference.test.golden.Complex.FooHandler
          "yo"
      PackageVar.Nil
function test.golden.Complex._S0.get test.golden.Complex 2
  case test.golden.Complex._S0.get_0
    typed String test.golden.Complex._S0.get.x
    typed contract test.golden.Handler test.golden.Complex._S0.get.h
  =
    @
      PackageVar.Cons
      <-
        LocalVar.test.golden.Complex._S0.get.h
        "reply"
        LocalVar.test.golden.Complex._S0.get.x
      PackageVar.Nil
function test.golden.Complex.handlers_6 test.golden.Complex 0
  case test.golden.Complex.handlers_6_0
  =
    CardFunction.test.golden.Complex.sayHello
function test.golden.Complex.inits_format 0
  case test.golden.Complex.inits_format_0
  =
    ?? class org.flasck.flas.rewrittenForm.AssertTypeExpr:(#assertType String "basic")
function test.golden.Complex.inits_hello 0
  case test.golden.Complex.inits_hello_0
  =
    ?? class org.flasck.flas.rewrittenForm.AssertTypeExpr:(#assertType String "hello, world")
function test.golden.Complex.sayHello test.golden.Complex 1
  case test.golden.Complex.sayHello_0
    typed test.golden.ClickIt test.golden.Complex.sayHello.ev
  =
    @
      PackageVar.Cons
      @
        PackageVar.Assign
        ?? class org.flasck.flas.rewrittenForm.CardStateRef:this
        "hello"
        ?? class org.flasck.flas.rewrittenForm.AssertTypeExpr:(#assertType String "goodbye")
      PackageVar.Nil
function test.golden.Complex.styleIf test.golden.Complex 2
  case test.golden.Complex.styleIf_0
    var test.golden.Complex.styleIf_0.style
    var test.golden.Complex.styleIf_0.b
  =
    if
      LocalVar.test.golden.Complex.styleIf_0.b
    then
      LocalVar.test.golden.Complex.styleIf_0.style
    else
      ""
function test.golden.WithInit.inits_x 0
  case test.golden.WithInit.inits_x_0
  =
    ?? class org.flasck.flas.rewrittenForm.AssertTypeExpr:(#assertType String "hello")
