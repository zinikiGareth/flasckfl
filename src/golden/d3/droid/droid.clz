class TestCard$B1.java extends org.flasck.jvm.areas.DivArea {
  Ltest/golden/TestCard; _card

  void <init>(java.lang.Object cxt, test.golden.TestCard cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    b2 = new test.golden.TestCard$B2(cxt,cardArg,this)
    b5 = new test.golden.TestCard$B5(cxt,cardArg,this)
    return
  }
}
class TestCard$B2.java extends org.flasck.jvm.areas.DivArea {
  Ltest/golden/TestCard; _card

  void <init>(java.lang.Object cxt, test.golden.TestCard cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    b3 = new test.golden.TestCard$B3(cxt,cardArg,this)
    return
  }
}
class TestCard$B3.java extends org.flasck.jvm.areas.DivArea {
  Ltest/golden/TestCard; _card

  void <init>(java.lang.Object cxt, test.golden.TestCard cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, "a")
    this._card = cardArg
    b4 = new test.golden.TestCard$B4(cxt,cardArg,this)
    (void)this._add_handlers(cxt)
    return
  }
  java.lang.Object _add_handlers(java.lang.Object cxt) {
    super.addEventHandler(false, "click", test.golden.TestCard$handlers_0.class)
    return null
  }
}
class TestCard$B4.java extends org.flasck.jvm.areas.TextArea {
  Ltest/golden/TestCard; _card

  void <init>(java.lang.Object cxt, test.golden.TestCard cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._setText("click here")
    return
  }
}
class TestCard$B5.java extends org.flasck.jvm.areas.DivArea {
  Ltest/golden/TestCard; _card

  void <init>(java.lang.Object cxt, test.golden.TestCard cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    b6 = new test.golden.TestCard$B6(cxt,cardArg,this)
    return
  }
}
class TestCard$B6.java extends org.flasck.jvm.areas.DivArea {
  Ltest/golden/TestCard; _card

  void <init>(java.lang.Object cxt, test.golden.TestCard cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, "svg")
    this._card = cardArg
    (void)this._setAttr_1(cxt)
    (void)this._setAttr_2(cxt)
    b7 = new test.golden.TestCard$B7(cxt,cardArg,this)
    return
  }
  java.lang.Object teas_1(java.lang.Object _context) {
    return "400"
  }
  java.lang.Object teas_2(java.lang.Object _context) {
    return "250"
  }
}
class TestCard$B7.java extends org.flasck.jvm.areas.D3Area {
  Ltest/golden/TestCard; _card

  void <init>(java.lang.Object cxt, test.golden.TestCard cardArg, org.flasck.jvm.areas.Area parent) {
    super.<init>(parent, null)
    this._card = cardArg
    this._card._wrapper.onAssign(this._card, "data", this, "_onUpdate")
    return
  }
}
class TestCard$_d3_chart_enter_rect.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._d3_chart_enter_rect(cxt)
  }
}
class TestCard$_d3_chart_enter_text.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._d3_chart_enter_text(cxt)
  }
}
class TestCard$_d3init_chart.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._d3init_chart(cxt)
  }
}
class TestCard$_gen_1.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_1(cxt, args[0])
  }
}
class TestCard$_gen_10.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_10(cxt, args[0])
  }
}
class TestCard$_gen_11.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_11(cxt, args[0])
  }
}
class TestCard$_gen_12.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_12(cxt, args[0])
  }
}
class TestCard$_gen_13.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_13(cxt, args[0])
  }
}
class TestCard$_gen_14.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_14(cxt, args[0])
  }
}
class TestCard$_gen_15.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_15(cxt)
  }
}
class TestCard$_gen_2.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_2(cxt, args[0])
  }
}
class TestCard$_gen_3.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_3(cxt, args[0])
  }
}
class TestCard$_gen_4.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_4(cxt, args[0])
  }
}
class TestCard$_gen_5.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_5(cxt, args[0])
  }
}
class TestCard$_gen_6.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_6(cxt, args[0])
  }
}
class TestCard$_gen_7.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_7(cxt, args[0])
  }
}
class TestCard$_gen_8.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_8(cxt, args[0])
  }
}
class TestCard$_gen_9.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self)._gen_9(cxt, args[0])
  }
}
class TestCard$handlers_0.java implements org.flasck.jvm.display.EventHandler {
  Ltest/golden/TestCard; _card

  void <init>(java.lang.Object cxt, java.lang.Object card) {
    super.<init>()
    this._card = ((test.golden.TestCard)card)
    return
  }
  java.lang.Object handle(java.lang.Object cxt, java.lang.Object ev) {
    return org.flasck.jvm.fl.FLClosure.obj(this._card, this.getHandler(cxt), new java.lang.Object[1] {
ev
      })
  }
  java.lang.Object getHandler(java.lang.Object _context) {
    return test.golden.TestCard$rejig.class
  }
}
class TestCard$inits_data.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self).inits_data(cxt)
  }
}
class TestCard$rejig.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(java.lang.Object cxt, java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.TestCard)self).rejig(cxt, args[0])
  }
}
class TestCard.java extends org.flasck.jvm.cards.FlasckCard {
  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    super.ready()
    return
  }
  java.lang.Object init(java.lang.Object cx) {
    v0 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Assign.class, new java.lang.Object[3] {
this
"data"
        org.flasck.jvm.fl.FLClosure.obj(this, test.golden.TestCard$inits_data.class, new java.lang.Object[0] {})

      })
    return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
v0
        org.flasck.jvm.builtin.Nil.eval(cx, new java.lang.Object[0] {})

      })
  }
  void render(java.lang.Object cxt, java.lang.String into) {
    (void)new test.golden.TestCard$B1(cxt,this,new org.flasck.jvm.areas.CardArea(this._wrapper,this._display,into))
    return
  }
  java.lang.Object _d3_chart_enter_rect(java.lang.Object _context) {
    {
      v0 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox["rect"]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
      v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.D3Action.class, new java.lang.Object[2] {
          autobox["append"]
          autobox[v0]
        })
      return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v1]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
    }
  }
  java.lang.Object _d3_chart_enter_text(java.lang.Object _context) {
    {
      v0 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox["text"]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
      v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.D3Action.class, new java.lang.Object[2] {
          autobox["append"]
          autobox[v0]
        })
      return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v1]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
    }
  }
  java.lang.Object _d3init_chart(java.lang.Object _context) {
    {
      v0 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["y"]
          autobox[this]
        })
      v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["x"]
          autobox[this]
        })
      v2 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["width"]
          autobox[this]
        })
      v3 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["height"]
          autobox[this]
        })
      v4 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["fill"]
          autobox[this]
        })
      v5 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v4]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
      v6 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v3]
          autobox[v5]
        })
      v7 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v2]
          autobox[v6]
        })
      v8 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v1]
          autobox[v7]
        })
      v9 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v0]
          autobox[v8]
        })
      v10 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["rect"]
          autobox[v9]
        })
      v11 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["y"]
          autobox[this]
        })
      v12 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["x"]
          autobox[this]
        })
      v13 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["width"]
          autobox[this]
        })
      v14 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["textAnchor"]
          autobox[this]
        })
      v15 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["text"]
          autobox[this]
        })
      v16 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["height"]
          autobox[this]
        })
      v17 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["fontSize"]
          autobox[this]
        })
      v18 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["fontFamily"]
          autobox[this]
        })
      v19 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["fill"]
          autobox[this]
        })
      v20 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v19]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
      v21 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v18]
          autobox[v20]
        })
      v22 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v17]
          autobox[v21]
        })
      v23 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v16]
          autobox[v22]
        })
      v24 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v15]
          autobox[v23]
        })
      v25 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v14]
          autobox[v24]
        })
      v26 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v13]
          autobox[v25]
        })
      v27 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v12]
          autobox[v26]
        })
      v28 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v11]
          autobox[v27]
        })
      v29 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Tuple.class, new java.lang.Object[2] {
          autobox["text"]
          autobox[v28]
        })
      v30 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v29]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
      v31 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v10]
          autobox[v30]
        })
      v32 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[this]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
      v33 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[this]
          autobox[v32]
        })
      v34 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Assoc.class, new java.lang.Object[3] {
          autobox["enter"]
          autobox[v33]
          autobox[org.flasck.jvm.builtin.NilMap.eval(_context, new java.lang.Object[0] {})]
        })
      v35 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Assoc.class, new java.lang.Object[3] {
          autobox["layout"]
          autobox[v31]
          autobox[v34]
        })
      return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Assoc.class, new java.lang.Object[3] {
          autobox["data"]
          autobox[this]
          autobox[v35]
        })
    }
  }
  java.lang.Object _gen_1(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        return "red"
      }
      return new org.flasck.jvm.fl.FLError("_gen_1: case not handled")
    }
  }
  java.lang.Object _gen_10(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Field.class, new java.lang.Object[2] {
            autobox[_0]
            autobox["data"]
          })
      }
      return new org.flasck.jvm.fl.FLError("_gen_10: case not handled")
    }
  }
  java.lang.Object _gen_11(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        return "middle"
      }
      return new org.flasck.jvm.fl.FLError("_gen_11: case not handled")
    }
  }
  java.lang.Object _gen_12(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        return org.flasck.jvm.builtin.FLNumber.fromInt(20)
      }
      return new org.flasck.jvm.fl.FLError("_gen_12: case not handled")
    }
  }
  java.lang.Object _gen_13(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        {
          v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Field.class, new java.lang.Object[2] {
              autobox[_0]
              autobox["idx"]
            })
          v2 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$mul.class, new java.lang.Object[2] {
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(22)]
              autobox[v1]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$+.class, new java.lang.Object[2] {
              autobox[v2]
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(10)]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("_gen_13: case not handled")
    }
  }
  java.lang.Object _gen_14(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        {
          v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Field.class, new java.lang.Object[2] {
              autobox[_0]
              autobox["data"]
            })
          v2 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$mul.class, new java.lang.Object[2] {
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(10)]
              autobox[v1]
            })
          v3 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$-.class, new java.lang.Object[2] {
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(200)]
              autobox[v2]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$+.class, new java.lang.Object[2] {
              autobox[v3]
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(14)]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("_gen_14: case not handled")
    }
  }
  java.lang.Object _gen_15(java.lang.Object _context) {
    return this.getVar(_context, "data")
  }
  java.lang.Object _gen_2(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        {
          v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Field.class, new java.lang.Object[2] {
              autobox[_0]
              autobox["data"]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$mul.class, new java.lang.Object[2] {
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(10)]
              autobox[v1]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("_gen_2: case not handled")
    }
  }
  java.lang.Object _gen_3(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        return org.flasck.jvm.builtin.FLNumber.fromInt(20)
      }
      return new org.flasck.jvm.fl.FLError("_gen_3: case not handled")
    }
  }
  java.lang.Object _gen_4(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        {
          v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Field.class, new java.lang.Object[2] {
              autobox[_0]
              autobox["idx"]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$mul.class, new java.lang.Object[2] {
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(22)]
              autobox[v1]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("_gen_4: case not handled")
    }
  }
  java.lang.Object _gen_5(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        {
          v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Field.class, new java.lang.Object[2] {
              autobox[_0]
              autobox["data"]
            })
          v2 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$mul.class, new java.lang.Object[2] {
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(10)]
              autobox[v1]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$-.class, new java.lang.Object[2] {
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(200)]
              autobox[v2]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("_gen_5: case not handled")
    }
  }
  java.lang.Object _gen_6(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        return "black"
      }
      return new org.flasck.jvm.fl.FLError("_gen_6: case not handled")
    }
  }
  java.lang.Object _gen_7(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        return "sans-serif"
      }
      return new org.flasck.jvm.fl.FLError("_gen_7: case not handled")
    }
  }
  java.lang.Object _gen_8(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        return "11px"
      }
      return new org.flasck.jvm.fl.FLError("_gen_8: case not handled")
    }
  }
  java.lang.Object _gen_9(java.lang.Object _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.D3Element) {
        {
          v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.fl.FLEval$Field.class, new java.lang.Object[2] {
              autobox[_0]
              autobox["data"]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$mul.class, new java.lang.Object[2] {
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(10)]
              autobox[v1]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("_gen_9: case not handled")
    }
  }
  java.lang.Object inits_data(java.lang.Object _context) {
    {
      v0 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[org.flasck.jvm.builtin.FLNumber.fromInt(16)]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
      v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[org.flasck.jvm.builtin.FLNumber.fromInt(2)]
          autobox[v0]
        })
      v2 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[org.flasck.jvm.builtin.FLNumber.fromInt(8)]
          autobox[v1]
        })
      return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[org.flasck.jvm.builtin.FLNumber.fromInt(5)]
          autobox[v2]
        })
    }
  }
  java.lang.Object rejig(java.lang.Object _context, java.lang.Object _0) {
    {
      v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[org.flasck.jvm.builtin.FLNumber.fromInt(9)]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
      v2 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[org.flasck.jvm.builtin.FLNumber.fromInt(11)]
          autobox[v1]
        })
      v3 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[org.flasck.jvm.builtin.FLNumber.fromInt(7)]
          autobox[v2]
        })
      v4 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[org.flasck.jvm.builtin.FLNumber.fromInt(4)]
          autobox[v3]
        })
      v5 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Assign.class, new java.lang.Object[3] {
          autobox[this]
          autobox["data"]
          autobox[v4]
        })
      return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v5]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
    }
  }
}
