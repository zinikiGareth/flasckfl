package test.golden
  cdecl test.golden.Bar @{2:0|contract} @{2:9|Bar}
    required down go @{3:0|down} @{3:5|go}
  cdecl test.golden.KeyValue @{5:0|contract} @{5:9|KeyValue}
    required up typed @{6:0|up} @{6:3|typed}
    required up mine @{7:0|up} @{7:3|mine}
  card test.golden.Foo @{9:0|card} @{9:5|Foo}
    implements KeyValue kv @{10:0|implements} @{10:11|KeyValue} @{10:20|kv}
    implements Bar @{11:0|implements} @{11:11|Bar}
      method test.golden.Foo._C1.go @{12:0|go}
        invoke @{13:0|<-}
          <apply> @{13:3|map}
            map @{13:3|map}
            request @{13:7|request}
            Nil @{13:16|]}
        invoke @{14:0|<-}
          <apply> @{14:3|map}
            map @{14:3|map}
            request2 @{14:7|request2}
            Nil @{14:17|]}
    test.golden.Foo.request @{16:0|request}
      [type] ck @{16:16|ck)}
        Crokey @{16:9|Crokey}
     =
      <apply> @{16:22|Send}
        Send @{16:22|Send}
        kv @{16:27|kv}
        '' typed @{16:30|'typed'}
        <apply> @{16:39|ck]}
          Cons @{16:39|ck]}
          ck @{16:39|ck]}
          Nil @{16:39|ck]}
    test.golden.Foo.request2 @{17:0|request2}
      [type] ck @{17:17|ck)}
        Crokey @{17:10|Crokey}
     =
      <apply> @{17:23|Send}
        Send @{17:23|Send}
        kv @{17:28|kv}
        '' mine @{17:31|'mine'}
        <apply> @{17:39|ck]}
          Cons @{17:39|ck]}
          ck @{17:39|ck]}
          Nil @{17:39|ck]}
