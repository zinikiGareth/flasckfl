class Bar.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
  abstract java.lang.Object go();
}
class Foo$_C0.java extends test.golden.KeyValue {
  void <init>(test.golden.Foo card) {
    super.<init>()
    this._card = card
    return
  }
}
class Foo$_C1.java extends test.golden.Bar {
  void <init>(test.golden.Foo card) {
    super.<init>()
    this._card = card
    return
  }
  java.lang.Object go() {
    {
      v5 = new org.flasck.jvm.FLClosure(this._card,org.flasck.jvm.FLEval$Curry.class,new java.lang.Object[2] {
          autobox[test.golden.Foo$request.class]
          autobox[java.lang.Integer.valueOf(1)]
        })
      v0 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$map.class,new java.lang.Object[2] {
          autobox[v5]
          autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
        })
      v4 = new org.flasck.jvm.FLClosure(this._card,org.flasck.jvm.FLEval$Curry.class,new java.lang.Object[2] {
          autobox[test.golden.Foo$request2.class]
          autobox[java.lang.Integer.valueOf(1)]
        })
      v1 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$map.class,new java.lang.Object[2] {
          autobox[v4]
          autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
        })
      v2 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
          autobox[v1]
          autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
        })
      return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
          autobox[v0]
          autobox[v2]
        })
    }
  }
}
class Foo$request.java {
  void <init>(test.golden.Foo card) {
    super.<init>()
    this._card = card
    return
  }
  static java.lang.Object eval(java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.Foo)self).request(args[0])
  }
}
class Foo$request2.java {
  void <init>(test.golden.Foo card) {
    super.<init>()
    this._card = card
    return
  }
  static java.lang.Object eval(java.lang.Object self, [java.lang.Object args) {
    return ((test.golden.Foo)self).request2(args[0])
  }
}
class Foo.java extends org.flasck.jvm.cards.FlasckCard {
  void <init>(org.flasck.jvm.cards.CardDespatcher despatcher, org.flasck.jvm.display.DisplayEngine display) {
    super.<init>(despatcher, display)
    this.kv = new test.golden.Foo$_C0(this)
    this.registerContract("test.golden.KeyValue", this.kv)
    this.registerContract("test.golden.Bar", new test.golden.Foo$_C1(this))
    super.ready()
    return
  }
  java.lang.Object request(java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.FLEval.head(_0)
      if (_0 instanceof org.flasck.jvm.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.Crokey) {
        {
          v1 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
              autobox[_0]
              autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
            })
          return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Send.class,new java.lang.Object[3] {
              autobox[this]
              autobox["typed"]
              autobox[v1]
            })
        }
      }
      return new org.flasck.jvm.FLError("request: case not handled")
    }
  }
  java.lang.Object request2(java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.FLEval.head(_0)
      if (_0 instanceof org.flasck.jvm.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.Crokey) {
        {
          v1 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
              autobox[_0]
              autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
            })
          return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Send.class,new java.lang.Object[3] {
              autobox[this]
              autobox["mine"]
              autobox[v1]
            })
        }
      }
      return new org.flasck.jvm.FLError("request2: case not handled")
    }
  }
}
class KeyValue.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
}
