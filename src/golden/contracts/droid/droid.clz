class Foo$Down.java implements org.ziniki.ziwsh.DownContract {
  abstract java.lang.Object goodbye(java.lang.Object from, int y);
}
class Foo$Impl.java extends org.flasck.jvm.ContractImpl implements test.golden.Foo$Down {
  void <init>(org.flasck.jvm.IDespatcher despatcher) {
    super.<init>(despatcher)
    return
  }
  abstract java.lang.Object goodbye(java.lang.Object from, int y);
}
class Foo$Up.java implements org.ziniki.ziwsh.UpContract {
  abstract java.lang.Object hello(java.lang.Object from, java.lang.String x);
}
class Handler$Down.java implements org.ziniki.ziwsh.DownContract {
  abstract java.lang.Object feedback(java.lang.Object from, java.lang.String answer);
}
class Handler$Impl.java extends org.flasck.jvm.ContractImpl implements test.golden.Handler$Down {
  void <init>(org.flasck.jvm.IDespatcher despatcher) {
    super.<init>(despatcher)
    return
  }
  abstract java.lang.Object feedback(java.lang.Object from, java.lang.String answer);
}
class Handler$Up.java implements org.ziniki.ziwsh.UpContract {
}
class Request$Down.java implements org.ziniki.ziwsh.DownContract {
}
class Request$Impl.java extends org.flasck.jvm.ContractImpl implements test.golden.Request$Down {
  void <init>(org.flasck.jvm.IDespatcher despatcher) {
    super.<init>(despatcher)
    return
  }
}
class Request$Up.java implements org.ziniki.ziwsh.UpContract {
  abstract java.lang.Object ask(java.lang.Object from, test.golden.Handler$Down answer);
}
class UsePolyInstance$Down.java implements org.ziniki.ziwsh.DownContract {
  abstract java.lang.Object giveList(java.lang.Object from, List l);
}
class UsePolyInstance$Impl.java extends org.flasck.jvm.ContractImpl implements test.golden.UsePolyInstance$Down {
  void <init>(org.flasck.jvm.IDespatcher despatcher) {
    super.<init>(despatcher)
    return
  }
  abstract java.lang.Object giveList(java.lang.Object from, List l);
}
class UsePolyInstance$Up.java implements org.ziniki.ziwsh.UpContract {
}
