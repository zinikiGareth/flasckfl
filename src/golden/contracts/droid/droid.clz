class Foo.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
  abstract java.lang.Object goodbye(java.lang.Object arg0);
}
class Handler.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
  abstract java.lang.Object feedback(java.lang.Object arg0);
}
class Request.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
}
class UsePolyInstance.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
  abstract java.lang.Object giveList(java.lang.Object arg0);
}
class Foo.java {
  abstract java.lang.Object hello(java.lang.Object arg0);
}
class Handler.java {
}
class Request.java {
  abstract java.lang.Object ask(java.lang.Object arg0);
}
class UsePolyInstance.java {
}
