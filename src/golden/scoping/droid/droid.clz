class NoArg.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
}
class PACKAGEFUNCTIONS$cna.java {
  java.lang.Object eval([java.lang.Object args) {
    return test.golden.PACKAGEFUNCTIONS.cna(args[0])
  }
}
class PACKAGEFUNCTIONS$f.java {
  java.lang.Object eval([java.lang.Object args) {
    return test.golden.PACKAGEFUNCTIONS.f(args[0], args[1])
  }
}
class PACKAGEFUNCTIONS.java {
  java.lang.Object cna(java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.FLEval.head(_0)
      if (_0 instanceof org.flasck.jvm.FLError) {
        return _0
      }
      if (_0 instanceof test.golden.NoArg) {
        {
          v1 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
              autobox[java.lang.Integer.valueOf(42)]
              autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
            })
          v2 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Send.class,new java.lang.Object[3] {
              autobox[_0]
              autobox["get"]
              autobox[v1]
            })
          return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
              autobox[v2]
              autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
            })
        }
      }
      return new org.flasck.jvm.FLError("cna: case not handled")
    }
  }
  java.lang.Object f(java.lang.Object _0, java.lang.Object _1) {
    {
      _0 = org.flasck.jvm.FLEval.head(_0)
      if (_0 instanceof org.flasck.jvm.FLError) {
        return _0
      }
      if (_0 instanceof test.golden.Server) {
        {
          v9 = new org.flasck.jvm.FLClosure(test.golden.f_0$var.class,new java.lang.Object[0] {})
          v7 = new org.flasck.jvm.FLClosure(org.flasck.jvm.FLEval$Curry.class,new java.lang.Object[4] {
              autobox[test.golden.f_0$HandleReply.class]
              autobox[java.lang.Integer.valueOf(3)]
              autobox[_0]
              autobox[v9]
            })
          v8 = new org.flasck.jvm.FLClosure(test.golden.f_0$q.class,new java.lang.Object[3] {
              autobox[v7]
              autobox[_0]
              autobox[v9]
            })
          v10 = new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.Cons.class,new java.lang.Object[2] {
              autobox[v8]
              autobox[org.flasck.jvm.builtin.Nil.eval(new java.lang.Object[0] {})]
            })
          return new org.flasck.jvm.FLClosure(org.flasck.jvm.builtin.MessageWrapper.class,new java.lang.Object[2] {
              autobox[v9]
              autobox[v10]
            })
        }
      }
      return new org.flasck.jvm.FLError("f: case not handled")
    }
  }
}
class Reply.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
  abstract java.lang.Object reply(java.lang.Object arg0);
}
class Server.java extends org.flasck.jvm.ContractImpl {
  void <init>() {
    super.<init>()
    return
  }
}
