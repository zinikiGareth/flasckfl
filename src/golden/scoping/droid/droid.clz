src/golden/scoping/droid-to/test/golden/NoArg$Down.java
class NoArg$Down.java implements org.ziniki.ziwsh.DownContract {
}
src/golden/scoping/droid-to/test/golden/NoArg$Impl.java
class NoArg$Impl.java extends org.flasck.jvm.cards.ContractImpl implements test.golden.NoArg$Down {
  void <init>(org.ziniki.ziwsh.postbox.IDespatcher despatcher) {
    super.<init>(despatcher)
    return
  }
}
src/golden/scoping/droid-to/test/golden/NoArg$Up.java
class NoArg$Up.java implements org.ziniki.ziwsh.UpContract {
  abstract java.lang.Object get(org.ziniki.ziwsh.json.FLEvalContext from, java.lang.Object arg0, java.lang.Object arg1);
}
src/golden/scoping/droid-to/test/golden/PACKAGEFUNCTIONS$cna.java
class PACKAGEFUNCTIONS$cna.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(org.ziniki.ziwsh.json.FLEvalContext cxt, [java.lang.Object args) {
    return test.golden.PACKAGEFUNCTIONS.cna(cxt, args[0])
  }
}
src/golden/scoping/droid-to/test/golden/PACKAGEFUNCTIONS$f.java
class PACKAGEFUNCTIONS$f.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(org.ziniki.ziwsh.json.FLEvalContext cxt, [java.lang.Object args) {
    return test.golden.PACKAGEFUNCTIONS.f(cxt, args[0], args[1])
  }
}
src/golden/scoping/droid-to/test/golden/PACKAGEFUNCTIONS.java
class PACKAGEFUNCTIONS.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object cna(org.ziniki.ziwsh.json.FLEvalContext _context, java.lang.Object _0) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof test.golden.NoArg) {
        {
          v1 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
              autobox[org.flasck.jvm.builtin.FLNumber.fromInt(42)]
              autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
            })
          v2 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Send.class, new java.lang.Object[4] {
              autobox[_0]
              autobox["get"]
              autobox[v1]
              autobox[new org.ziniki.ziwsh.model.TrivialIdempotentHandler()]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
              autobox[v2]
              autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("cna: case not handled")
    }
  }
  static java.lang.Object f(org.ziniki.ziwsh.json.FLEvalContext _context, java.lang.Object _0, java.lang.Object _1) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof test.golden.Server) {
        {
          v8 = org.flasck.jvm.fl.FLClosure.simple(test.golden.f_0$var.class, new java.lang.Object[0] {})
          v6 = new org.flasck.jvm.fl.FLCurry(test.golden.f_0$HandleReply.class,3,new java.lang.Object[2] {
              autobox[_0]
              autobox[v8]
            })
          v7 = org.flasck.jvm.fl.FLClosure.simple(test.golden.f_0$q.class, new java.lang.Object[3] {
              autobox[v6]
              autobox[_0]
              autobox[v8]
            })
          v9 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
              autobox[v7]
              autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.MessageWrapper.class, new java.lang.Object[2] {
              autobox[v8]
              autobox[v9]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("f: case not handled")
    }
  }
}
src/golden/scoping/droid-to/test/golden/Reply$Down.java
class Reply$Down.java implements org.ziniki.ziwsh.DownContract {
  abstract java.lang.Object reply(org.ziniki.ziwsh.json.FLEvalContext from, java.lang.Object k, java.lang.Object arg1);
}
src/golden/scoping/droid-to/test/golden/Reply$Impl.java
class Reply$Impl.java extends org.flasck.jvm.cards.ContractImpl implements test.golden.Reply$Down {
  void <init>(org.ziniki.ziwsh.postbox.IDespatcher despatcher) {
    super.<init>(despatcher)
    return
  }
  abstract java.lang.Object reply(org.ziniki.ziwsh.json.FLEvalContext from, java.lang.Object k, java.lang.Object arg1);
}
src/golden/scoping/droid-to/test/golden/Reply$Up.java
class Reply$Up.java implements org.ziniki.ziwsh.UpContract {
}
src/golden/scoping/droid-to/test/golden/Server$Down.java
class Server$Down.java implements org.ziniki.ziwsh.DownContract {
}
src/golden/scoping/droid-to/test/golden/Server$Impl.java
class Server$Impl.java extends org.flasck.jvm.cards.ContractImpl implements test.golden.Server$Down {
  void <init>(org.ziniki.ziwsh.postbox.IDespatcher despatcher) {
    super.<init>(despatcher)
    return
  }
}
src/golden/scoping/droid-to/test/golden/Server$Up.java
class Server$Up.java implements org.ziniki.ziwsh.UpContract {
  abstract java.lang.Object get(org.ziniki.ziwsh.json.FLEvalContext from, java.lang.Object k, java.lang.Object r);
  abstract java.lang.Object put(org.ziniki.ziwsh.json.FLEvalContext from, java.lang.Object k, java.lang.Object arg1);
}
src/golden/scoping/droid-to/test/golden/f_0$HandleReply.java
class f_0$HandleReply.java extends test.golden.Reply$Impl {
  Ljava/lang/Object; server
  Ljava/lang/Object; var
  Ljava/lang/Object; v

  void <init>(org.ziniki.ziwsh.json.FLEvalContext cxt, java.lang.Object server, java.lang.Object var, java.lang.Object v) {
    super.<init>()
    this.server = org.flasck.jvm.fl.FLEval.head(cxt, server)
    this.var = org.flasck.jvm.fl.FLEval.head(cxt, var)
    this.v = org.flasck.jvm.fl.FLEval.head(cxt, v)
    return
  }
  static java.lang.Object eval(org.ziniki.ziwsh.json.FLEvalContext cxt, [java.lang.Object args) {
    if (args.length<3) {
      return new org.flasck.jvm.fl.FLCurry(null,test.golden.f_0$HandleReply.class,args)
    } else {
      return new test.golden.f_0$HandleReply(cxt,args[0],args[1],args[2])
    }
  }
  java.lang.Object reply(org.ziniki.ziwsh.json.FLEvalContext _context, java.lang.Object _0, java.lang.Object _1) {
    {
      _0 = org.flasck.jvm.fl.FLEval.head(_context, _0)
      if (_0 instanceof org.flasck.jvm.fl.FLError) {
        return _0
      }
      if (_0 instanceof org.flasck.jvm.builtin.FLNumber) {
        {
          v2 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.PACKAGEFUNCTIONS$+.class, new java.lang.Object[2] {
              autobox[this.var]
              autobox[this.v]
            })
          v3 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
              autobox[v2]
              autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
            })
          v4 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Send.class, new java.lang.Object[4] {
              autobox[this.server]
              autobox["put"]
              autobox[v3]
              autobox[new org.ziniki.ziwsh.model.TrivialIdempotentHandler()]
            })
          return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
              autobox[v4]
              autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
            })
        }
      }
      return new org.flasck.jvm.fl.FLError("reply: case not handled")
    }
  }
}
src/golden/scoping/droid-to/test/golden/f_0/PACKAGEFUNCTIONS$q.java
class PACKAGEFUNCTIONS$q.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(org.ziniki.ziwsh.json.FLEvalContext cxt, [java.lang.Object args) {
    return test.golden.f_0.PACKAGEFUNCTIONS.q(cxt, args[0], args[1], args[2])
  }
}
src/golden/scoping/droid-to/test/golden/f_0/PACKAGEFUNCTIONS$var.java
class PACKAGEFUNCTIONS$var.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object eval(org.ziniki.ziwsh.json.FLEvalContext cxt, [java.lang.Object args) {
    return test.golden.f_0.PACKAGEFUNCTIONS.var(cxt)
  }
}
src/golden/scoping/droid-to/test/golden/f_0/PACKAGEFUNCTIONS.java
class PACKAGEFUNCTIONS.java {
  void <init>() {
    super.<init>()
    return
  }
  static java.lang.Object q(org.ziniki.ziwsh.json.FLEvalContext _context, java.lang.Object _s0, java.lang.Object _s1, java.lang.Object _s2) {
    {
      v0 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[_s2]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
      v1 = org.flasck.jvm.fl.FLClosure.simple(_s0, new java.lang.Object[1] {
          autobox[_s2]
        })
      v2 = org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Send.class, new java.lang.Object[4] {
          autobox[_s1]
          autobox["get"]
          autobox[v0]
          autobox[v1]
        })
      return org.flasck.jvm.fl.FLClosure.simple(org.flasck.jvm.builtin.Cons.class, new java.lang.Object[2] {
          autobox[v2]
          autobox[org.flasck.jvm.builtin.Nil.eval(_context, new java.lang.Object[0] {})]
        })
    }
  }
  static java.lang.Object var(org.ziniki.ziwsh.json.FLEvalContext _context) {
    return org.flasck.jvm.builtin.FLNumber.fromInt(32)
  }
}
