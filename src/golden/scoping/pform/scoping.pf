package test.golden
  cdecl test.golden.Reply
    down reply
      [type] k
        Number
  cdecl test.golden.Server
    up get
      [type] k
        Number
      [type] r
        Reply
    up put
      [type] k
        Number
  test.golden.f
    [type] server
      Server
    [var] x
   =
    MessageWrapper
      var
      Cons
        q
        Nil
    test.golden.f_0.var
     =
      # 32
    case test.golden.f_0.q_0
        invoke <-
            .
              server
              get
            var
            HandleReply
              var
    handler Reply test.golden.f_0.HandleReply (free)
      [type] v
        Number
      case test.golden.f_0.HandleReply.reply
          [var] y
          invoke <-
              .
                server
                put
              +
                var
                v
  cdecl test.golden.NoArg
    up get
      [ctor] Number
  case test.golden.cna_0
      [type] na
        NoArg
      invoke <-
          .
            na
            get
          # 42
