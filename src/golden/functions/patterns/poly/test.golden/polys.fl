// Cons[True]->Number
	e (Cons {head: True}) = 1
	e x = 0

// Cons[A]->A
	hd (Cons {head: x}) = x
	
// We should be able to merge a poly and Nil

	pn True  x = Nil
	pn False y = y

// we need to be able to instantiate inferred types later
// this should give A->A->A
	f a b
		| True	= a
		| False	= b

// then this should be fine
g x = f 2 x


// Number->Any->Number
	r a b
		| True	= a
		| False	= 42
