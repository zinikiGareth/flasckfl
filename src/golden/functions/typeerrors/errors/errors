cannot unify [Number, String]
caseerrors.f  1.0:     _ stringNumber
                          cannot unify [Number, String]
fielderrors.  3.12:   String s <-  _ 42
                          cannot initialize s from Number
fielderrors.  4.12:   Number n <-  _ "hello"
                          cannot initialize n from String
fnerrors.fl:  3.6:    f x =  _ "hello" + 3
                          function '+' was expecting Number not String
guarderrors.  2.2:    |  _ 42 = "hello"
                          guards must be booleans
msgerrors.fl  4.3:    <-  _ "hello"
                          String cannot be a Message
msgerrors.fl  5.3:    <-  _ Foo
                          test.golden.Foo cannot be a Message
msgerrors.fl  6.4:    <- [ _ 42]
                          Number cannot be a Message
recursionerr  2.7:    r1 x =  _ r1 42 + r2 x
                          cannot unify [Number, String]
recursionerr  2.15:   r1 x = r1 42 +  _ r2 x
                          cannot unify [Number, String]
testerrors.u  6.11:   assert (ok  _ "hello")
                          function 'ok' was expecting Number not String
testerrors.u 11.0:     _ "hello"
                          value is of type String that cannot be the result of an expression of type Number
undeclaredfi  5.25:   recoverit (HoldIt e) = e. _ notcalled
                          there is no field 'notcalled' in test.golden.HoldIt
undeclaredfi  8.20:   badarg (Number n) =  _ n
                          cannot unify [Number, String]
