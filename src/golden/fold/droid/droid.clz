class PACKAGEFUNCTIONS$fold.java {
  java.lang.Object eval([java.lang.Object args) {
    return test.golden.PACKAGEFUNCTIONS.fold(args[0], args[1], args[2])
  }
}
class PACKAGEFUNCTIONS.java {
  java.lang.Object fold(java.lang.Object _0, java.lang.Object _1, java.lang.Object _2) {
    {
      _2 = org.flasck.jvm.FLEval.head(_2)
      if (_2 instanceof org.flasck.jvm.FLError) {
        return _2
      }
      if (_2 instanceof org.flasck.jvm.builtin.Cons) {
        {
          v5 = _0
          return new org.flasck.jvm.FLClosure(test.golden.PACKAGEFUNCTIONS$fold.class,new java.lang.Object[3] {
  autobox[_0]
  autobox[v5]
  autobox[v2.tail]
})
        }
      }
      if (_2 instanceof org.flasck.jvm.builtin.Nil) {
        return _1
      }
      return new org.flasck.jvm.FLError("fold: case not handled")
    }
  }
}
